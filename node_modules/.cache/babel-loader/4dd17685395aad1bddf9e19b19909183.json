{"remainingRequest":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/node_modules/thread-loader/dist/cjs.js!/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/node_modules/babel-loader/lib/index.js!/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/src/components/Pages/ResetPassword.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/src/components/Pages/ResetPassword.vue","mtime":1581193846038},{"path":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport block_nav from \"../Units/BlockNav\";\nimport block_footer from \"../Units/Block_Footer\";\nimport block_alert from \"../Units/Block_Notification\";\nimport { socket_bus } from \"../../main\";\nimport { HTTP } from \"../../http-common\";\nimport { router } from \"../../routers\";\nexport default {\n  components: {\n    block_nav: block_nav,\n    block_footer: block_footer,\n    block_alert: block_alert\n  },\n  data: function data() {\n    return {\n      email: '',\n      password: '',\n      confirmation: '',\n      token: '',\n      is_reset: false,\n      data: null\n    };\n  },\n  methods: {\n    handle_reset_password: function handle_reset_password() {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        HTTP.patch(\"/reset-password/\", {\n          id_ticket: _this.data._id,\n          password: _this.password\n        }).then(function (result) {\n          resolve(result);\n\n          if (result.data.status == 200) {\n            socket_bus.$emit('SHOW_MESSAGE', {\n              message: _this.$t('message_alert.reset_pwd_success')\n            });\n            setTimeout(function () {\n              router.push('/');\n            }, 2000);\n          } else {\n            socket_bus.$emit('SHOW_MESSAGE', {\n              message: _this.$t('message_alert.reset_pwd_fail')\n            });\n          }\n        }).catch(function (error) {\n          reject(error);\n          console.log(error);\n        });\n      });\n    },\n    handle_check_token: function handle_check_token() {\n      var _this2 = this;\n\n      return new Promise(function (resolve, reject) {\n        HTTP.get(\"/reset-password/token=\".concat(_this2.token)).then(function (result) {\n          resolve(result);\n          _this2.is_reset = result.data.status == 200 ? true : false;\n          _this2.data = result.data.status == 200 ? result.data.data : null;\n        }).catch(function (error) {\n          reject(error);\n          console.log(error);\n        });\n      });\n    }\n  },\n  created: function created() {\n    this.token = this.$route.params.token;\n    this.handle_check_token();\n  }\n};",{"version":3,"sources":["ResetPassword.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA,OAAA,SAAA;AACA,OAAA,YAAA;AACA,OAAA,WAAA;AACA,SAAA,UAAA;AACA,SAAA,IAAA;AACA,SAAA,MAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA,SADA;AACA,IAAA,YAAA,EAAA,YADA;AACA,IAAA,WAAA,EAAA;AADA,GADA;AAIA,EAAA,IAJA,kBAIA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,EADA;AAEA,MAAA,QAAA,EAAA,EAFA;AAGA,MAAA,YAAA,EAAA,EAHA;AAIA,MAAA,KAAA,EAAA,EAJA;AAKA,MAAA,QAAA,EAAA,KALA;AAMA,MAAA,IAAA,EAAA;AANA,KAAA;AAQA,GAbA;AAcA,EAAA,OAAA,EAAA;AACA,IAAA,qBADA,mCACA;AAAA;;AACA,aAAA,IAAA,OAAA,CAAA,UAAA,OAAA,EAAA,MAAA,EAAA;AACA,QAAA,IAAA,CAAA,KAAA,qBAAA;AAAA,UAAA,SAAA,EAAA,KAAA,CAAA,IAAA,CAAA,GAAA;AAAA,UAAA,QAAA,EAAA,KAAA,CAAA;AAAA,SAAA,EAAA,IAAA,CAAA,UAAA,MAAA,EAAA;AACA,UAAA,OAAA,CAAA,MAAA,CAAA;;AACA,cAAA,MAAA,CAAA,IAAA,CAAA,MAAA,IAAA,GAAA,EAAA;AACA,YAAA,UAAA,CAAA,KAAA,CAAA,cAAA,EAAA;AAAA,cAAA,OAAA,EAAA,KAAA,CAAA,EAAA,CAAA,iCAAA;AAAA,aAAA;AACA,YAAA,UAAA,CAAA,YAAA;AACA,cAAA,MAAA,CAAA,IAAA,CAAA,GAAA;AACA,aAFA,EAEA,IAFA,CAAA;AAGA,WALA,MAKA;AACA,YAAA,UAAA,CAAA,KAAA,CAAA,cAAA,EAAA;AAAA,cAAA,OAAA,EAAA,KAAA,CAAA,EAAA,CAAA,8BAAA;AAAA,aAAA;AACA;AACA,SAVA,EAUA,KAVA,CAUA,UAAA,KAAA,EAAA;AACA,UAAA,MAAA,CAAA,KAAA,CAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,KAAA;AACA,SAbA;AAcA,OAfA,CAAA;AAgBA,KAlBA;AAmBA,IAAA,kBAnBA,gCAmBA;AAAA;;AACA,aAAA,IAAA,OAAA,CAAA,UAAA,OAAA,EAAA,MAAA,EAAA;AACA,QAAA,IAAA,CAAA,GAAA,iCAAA,MAAA,CAAA,KAAA,GAAA,IAAA,CAAA,UAAA,MAAA,EAAA;AACA,UAAA,OAAA,CAAA,MAAA,CAAA;AACA,UAAA,MAAA,CAAA,QAAA,GAAA,MAAA,CAAA,IAAA,CAAA,MAAA,IAAA,GAAA,GAAA,IAAA,GAAA,KAAA;AACA,UAAA,MAAA,CAAA,IAAA,GAAA,MAAA,CAAA,IAAA,CAAA,MAAA,IAAA,GAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,GAAA,IAAA;AACA,SAJA,EAIA,KAJA,CAIA,UAAA,KAAA,EAAA;AACA,UAAA,MAAA,CAAA,KAAA,CAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,KAAA;AACA,SAPA;AAQA,OATA,CAAA;AAUA;AA9BA,GAdA;AA8CA,EAAA,OA9CA,qBA8CA;AACA,SAAA,KAAA,GAAA,KAAA,MAAA,CAAA,MAAA,CAAA,KAAA;AACA,SAAA,kBAAA;AACA;AAjDA,CAAA","sourcesContent":["<template>\n   <div>\n        <block_nav></block_nav>\n        <div class=\"flex-col-center\" style=\"display: flex; margin: 60px 0;\">\n            <div class=\"block-form flex-col-center\" v-if=\"is_reset\">\n                <ValidationObserver v-slot=\"{ invalid }\">\n                    <form class=\"form-login\" @submit.prevent=\"handle_reset_password\">\n                        <div class=\"form-header\">\n                            <p class=\"title-form\">{{$t('manager.forgot_pwd')}}</p>\n                        </div>\n                        <div class=\"form-content\" style=\"height: auto; flex: 1; padding: 0;  margin-top: 20px;\">\n                            <div class=\"form-group margin-bottom col-group\">\n                                <div class=\"form-group \">\n                                    <ValidationProvider name=\"password\" rules=\"required|min:9\" v-slot=\"{errors}\" style=\"width: 100%\">\n                                        <input type=\"password\" :placeholder=\"`${$t('form_login.password')}`\" name=\"password\" v-model=\"password\">\n                                        <span class=\"error-text margin-fix-top\" >{{ errors[0] }}</span>\n                                    </ValidationProvider>\n                                </div>\n                            </div>\n                            <div class=\"form-group margin-bottom col-group\">\n                                <div class=\"form-group \">\n                                    <ValidationProvider name=\"re_password\" rules=\"required|password:@password\" v-slot=\"{errors}\" style=\"width: 100%\">\n                                        <input type=\"password\" :placeholder=\"`${$t('form_login.re_password')}`\" name=\"re_password\" v-model=\"confirmation\">\n                                        <span class=\"error-text margin-fix-top\" >{{ errors[0] }}</span>\n                                    </ValidationProvider>\n                                </div>\n                            </div>\n                            <div class=\"form-group margin-top\" >\n                                <button type=\"submit\" class=\"btn btn-login\" :class=\"{' bg-title-header': !invalid, 'disable-button' : invalid}\" :disabled=\"invalid\"   style=\"width: 100%; border: none;\">Reset Password</button>\n                            </div>\n                        </div>\n                    </form>\n                </ValidationObserver>\n            </div>\n            <div class=\"form-group col-group\" style=\"justify-content: center; align-items: center\" v-else>\n                <p class=\"title-form margin-bottom-fix\">{{$t('link_not_exit')}}</p>\n                <router-link to=\"/\">{{$t('user_page.back_home')}}</router-link>\n            </div>\n        </div>\n        <block_footer></block_footer>\n        <block_alert></block_alert>\n    </div>\n   \n</template>\n\n<script>\nimport block_nav from '../Units/BlockNav';\nimport block_footer from '../Units/Block_Footer';\nimport block_alert from '../Units/Block_Notification';\nimport { socket_bus } from '../../main'\nimport { HTTP } from '../../http-common';\nimport { router } from '../../routers';\n\nexport default {\n    components: {\n        block_nav, block_footer,block_alert\n    },\n    data() {\n        return {\n            email: '',\n            password: '',\n            confirmation: '',\n            token: '',\n            is_reset: false,\n            data: null\n        }\n    },\n    methods: {\n       handle_reset_password() {\n           return new Promise((resolve, reject) => {\n               HTTP.patch(`/reset-password/`,{id_ticket: this.data._id, password: this.password}).then(result => {\n                   resolve(result)\n                   if(result.data.status == 200) {\n                       socket_bus.$emit('SHOW_MESSAGE', {message: this.$t('message_alert.reset_pwd_success')})\n                       setTimeout(() => {\n                           router.push('/')\n                       }, 2000)\n                   } else {\n                       socket_bus.$emit('SHOW_MESSAGE', {message: this.$t('message_alert.reset_pwd_fail')})\n                   }\n               }).catch(error => {\n                   reject(error)\n                   console.log(error);\n               })\n           })\n       },\n       handle_check_token() {\n           return new Promise((resolve, reject) => {\n               HTTP.get(`/reset-password/token=${this.token}`).then(result => {\n                   resolve(result)\n                   this.is_reset = result.data.status == 200 ? true : false\n                   this.data = result.data.status == 200 ? result.data.data : null;\n               }).catch(error => {\n                   reject(error)\n                   console.log(error);\n               })\n           })\n       }\n    },\n    created() {\n        this.token = this.$route.params.token\n        this.handle_check_token()\n    }\n}\n</script>"],"sourceRoot":"src/components/Pages"}]}