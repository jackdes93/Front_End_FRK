{"remainingRequest":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/node_modules/thread-loader/dist/cjs.js!/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/node_modules/babel-loader/lib/index.js!/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/src/components/Pages/ForgotPassword.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/src/components/Pages/ForgotPassword.vue","mtime":1572286796852},{"path":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport block_nav from \"../Units/BlockNav\";\nimport block_footer from \"../Units/Block_Footer\";\nimport block_alert from \"../Units/Block_Notification\";\nimport { socket_bus } from \"../../main\";\nimport VueRecaptcha from 'vue-recaptcha';\nimport { HTTP } from \"../../http-common\";\nimport { router } from \"../../routers\";\nexport default {\n  components: {\n    block_nav: block_nav,\n    block_footer: block_footer,\n    block_alert: block_alert,\n    VueRecaptcha: VueRecaptcha\n  },\n  data: function data() {\n    return {\n      email: '',\n      token_recaptcha: null\n    };\n  },\n  methods: {\n    handle_verify: function handle_verify(response) {\n      this.token_recaptcha = response;\n    },\n    handle_expired: function handle_expired() {\n      this.$refs.recaptcha.reset();\n    },\n    handle_load: function handle_load() {\n      this.$recaptchaLoaded().then(function () {});\n    },\n    handle_send_link_reset: function handle_send_link_reset() {\n      var _this = this;\n\n      if (this.token_recaptcha != null) {\n        this.$validator.validateAll();\n\n        if (!this.errors.any()) {\n          return new Promise(function (resolve, reject) {\n            HTTP.post(\"/reset-password\", {\n              email: _this.email\n            }).then(function (result) {\n              resolve(result);\n\n              if (result.data.status == 201) {\n                socket_bus.$emit('SHOW_MESSAGE', {\n                  message: 'Your link reset password have been sent to your email'\n                });\n                setTimeout(function () {\n                  router.push('/');\n                }, 2000);\n              } else {\n                socket_bus.$emit('SHOW_MESSAGE', {\n                  message: 'Email wrong or not exist. Please check again'\n                });\n              }\n            }).catch(function (error) {\n              reject(error);\n              console.log(error);\n            });\n          });\n        }\n      } else {\n        socket_bus.$emit('SHOW_MESSAGE', {\n          message: 'Please check again capcha'\n        });\n      }\n    }\n  },\n  created: function created() {}\n};",{"version":3,"sources":["ForgotPassword.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA,OAAA,SAAA;AACA,OAAA,YAAA;AACA,OAAA,WAAA;AACA,SAAA,UAAA;AACA,OAAA,YAAA,MAAA,eAAA;AACA,SAAA,IAAA;AACA,SAAA,MAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA,SADA;AACA,IAAA,YAAA,EAAA,YADA;AACA,IAAA,WAAA,EAAA,WADA;AACA,IAAA,YAAA,EAAA;AADA,GADA;AAIA,EAAA,IAJA,kBAIA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,EADA;AAEA,MAAA,eAAA,EAAA;AAFA,KAAA;AAIA,GATA;AAUA,EAAA,OAAA,EAAA;AACA,IAAA,aAAA,EAAA,uBAAA,QAAA,EAAA;AACA,WAAA,eAAA,GAAA,QAAA;AACA,KAHA;AAIA,IAAA,cAAA,EAAA,0BAAA;AACA,WAAA,KAAA,CAAA,SAAA,CAAA,KAAA;AACA,KANA;AAOA,IAAA,WAPA,yBAOA;AACA,WAAA,gBAAA,GAAA,IAAA,CAAA,YAAA,CAEA,CAFA;AAGA,KAXA;AAYA,IAAA,sBAZA,oCAYA;AAAA;;AACA,UAAA,KAAA,eAAA,IAAA,IAAA,EAAA;AACA,aAAA,UAAA,CAAA,WAAA;;AACA,YAAA,CAAA,KAAA,MAAA,CAAA,GAAA,EAAA,EAAA;AACA,iBAAA,IAAA,OAAA,CAAA,UAAA,OAAA,EAAA,MAAA,EAAA;AACA,YAAA,IAAA,CAAA,IAAA,oBAAA;AAAA,cAAA,KAAA,EAAA,KAAA,CAAA;AAAA,aAAA,EAAA,IAAA,CAAA,UAAA,MAAA,EAAA;AACA,cAAA,OAAA,CAAA,MAAA,CAAA;;AACA,kBAAA,MAAA,CAAA,IAAA,CAAA,MAAA,IAAA,GAAA,EAAA;AACA,gBAAA,UAAA,CAAA,KAAA,CAAA,cAAA,EAAA;AAAA,kBAAA,OAAA,EAAA;AAAA,iBAAA;AACA,gBAAA,UAAA,CAAA,YAAA;AACA,kBAAA,MAAA,CAAA,IAAA,CAAA,GAAA;AACA,iBAFA,EAEA,IAFA,CAAA;AAGA,eALA,MAKA;AACA,gBAAA,UAAA,CAAA,KAAA,CAAA,cAAA,EAAA;AAAA,kBAAA,OAAA,EAAA;AAAA,iBAAA;AACA;AACA,aAVA,EAUA,KAVA,CAUA,UAAA,KAAA,EAAA;AACA,cAAA,MAAA,CAAA,KAAA,CAAA;AACA,cAAA,OAAA,CAAA,GAAA,CAAA,KAAA;AACA,aAbA;AAcA,WAfA,CAAA;AAgBA;AACA,OApBA,MAoBA;AACA,QAAA,UAAA,CAAA,KAAA,CAAA,cAAA,EAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SAAA;AACA;AACA;AApCA,GAVA;AAgDA,EAAA,OAhDA,qBAgDA,CAEA;AAlDA,CAAA","sourcesContent":["<template>\n   <div>\n        <block_nav></block_nav>\n        <div class=\"flex-col-center\" style=\"display: flex; margin: 60px 0;\">\n            <div class=\"block-form flex-col-center\">\n                <form class=\"form-login\" @submit.prevent=\"handle_send_link_reset\">\n                    <div class=\"form-header\">\n                        <p class=\"title-form\">Forgot Password</p>\n                    </div>\n                    <div class=\"form-content\" style=\"height: auto; flex: 1; padding: 0;  margin-top: 20px;\">\n                        <div class=\"form-group margin-bottom col-group\">\n                            <div class=\"form-group\">\n                                <input type=\"text\" name=\"email\" placeholder=\"Email\" v-model=\"email\" v-validate=\"'required:true|email'\">\n                            </div>\n                            <span class=\"error-text margin-fix-top\" v-show=\"errors.has('email')\">{{errors.first('email')}}</span>\n                        </div>\n                        <vue-recaptcha id=\"capcah\" sitekey=\"6LeeM74UAAAAAJ71ru17H2h-hReSNO_07eNNm7Is\" :loadRecaptchaScript=\"true\" @verify=\"handle_verify\" @expired=\"handle_expired\" ref=\"recaptcha\" ></vue-recaptcha >\n\n                        <div class=\"form-group margin-top\" >\n                            <button type=\"submit\" class=\"btn btn-login bg-title-header\" :disabled=\"errors.length > 0\"   style=\"width: 100%; border: none;\">Send Link Reset</button>\n                        </div>\n                    </div>\n                    \n                </form>\n            </div>\n        </div>\n        <block_footer></block_footer>\n        <block_alert></block_alert>\n    </div>\n   \n</template>\n\n<script>\nimport block_nav from '../Units/BlockNav';\nimport block_footer from '../Units/Block_Footer';\nimport block_alert from '../Units/Block_Notification';\nimport { socket_bus } from '../../main'\nimport VueRecaptcha from 'vue-recaptcha'\nimport { HTTP } from '../../http-common';\nimport { router } from '../../routers';\n\nexport default {\n    components: {\n        block_nav, block_footer,block_alert, VueRecaptcha\n    },\n    data() {\n        return {\n            email: '',\n            token_recaptcha: null,\n        }\n    },\n    methods: {\n        handle_verify: function(response) {\n           this.token_recaptcha = response\n        },\n        handle_expired: function () {\n            this.$refs.recaptcha.reset()\n        },\n        handle_load() {\n            this.$recaptchaLoaded().then(() => {\n\n            })\n        },\n        handle_send_link_reset() {\n            if(this.token_recaptcha != null) {\n                this.$validator.validateAll()\n                if(!this.errors.any()) {\n                    return new Promise((resolve, reject) => {\n                        HTTP.post(`/reset-password`, {email: this.email}).then(result => {\n                            resolve(result)\n                            if(result.data.status == 201) {\n                                socket_bus.$emit('SHOW_MESSAGE', {message: 'Your link reset password have been sent to your email'})\n                                setTimeout(() => {\n                                    router.push('/')\n                                }, 2000)\n                            } else {\n                                socket_bus.$emit('SHOW_MESSAGE', {message: 'Email wrong or not exist. Please check again'})\n                            }   \n                        }).catch(error => {\n                            reject(error)\n                            console.log(error);\n                        })\n                    })\n                }\n            } else {\n                socket_bus.$emit('SHOW_MESSAGE', {message: 'Please check again capcha'})\n            }\n        }\n    },\n    created() {\n\n    }\n}\n</script>"],"sourceRoot":"src/components/Pages"}]}