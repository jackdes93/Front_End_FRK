{"remainingRequest":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/node_modules/babel-loader/lib/index.js!/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/src/components/Pages/User/ui_user/FormAddBrand.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/src/components/Pages/User/ui_user/FormAddBrand.vue","mtime":1581754108266},{"path":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.match\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { socket_bus } from \"../../../../main\";\nimport { HTTP_ADMIN } from \"../../../../http-common\";\nexport default {\n  data: function data() {\n    return {\n      is_show: false,\n      customers: [],\n      search_text: '',\n      customer: '',\n      categories: [],\n      category_selected: '',\n      list_feature: [],\n      new_brand: {\n        id_category: '',\n        id_customer: '',\n        name: '',\n        introduce: '',\n        phone_number: '',\n        email: '',\n        website: '',\n        feature: [],\n        events: [],\n        terms: [],\n        location: [],\n        head_office: 'No Info',\n        price: 1000,\n        offset_price: 1000\n      },\n      images: '',\n      thumbnail: '',\n      main_banner: Array,\n      image_intro: Array\n    };\n  },\n  methods: {\n    handle_translate: function handle_translate(name) {\n      var result = '';\n\n      switch (name) {\n        case 'Drink':\n          result = this.$t('drink');\n          break;\n\n        case 'Dessert':\n          result = this.$t('dessert');\n          break;\n\n        case 'Vietnamese Foods':\n          result = this.$t('vn_food');\n          break;\n\n        case 'Foriegn Foods':\n          result = this.$t('foriegn_fd');\n          break;\n\n        case 'BBQ':\n          result = this.$t('bbq');\n          break;\n\n        case 'Brunch':\n          result = this.$t('brunch');\n          break;\n\n        case 'Hot Pot':\n          result = this.$t('hotpot');\n          break;\n      }\n\n      return result;\n    },\n    handle_close: function handle_close() {\n      socket_bus.$emit('CANCEL_ADD_BRAND', {\n        state: false\n      });\n    },\n    handle_get_users: function handle_get_users() {\n      var _this = this;\n\n      HTTP_ADMIN.get('/customers').then(function (result) {\n        _this.customers = result.data.status == 200 ? result.data.data : [];\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    handle_choose_customer: function handle_choose_customer(customer) {\n      this.customer = customer;\n      this.is_show = false;\n      this.search_text = customer.email;\n    },\n    handleFileUpload: function handleFileUpload(e) {\n      var files = e.target.files || e.dataTransfer.files;\n      if (!files.length) return;\n      this.images = this.$refs.logo.files[0];\n      this.thumbnail = this.$refs.thumbnail.files[0];\n    },\n    handle_save: function handle_save() {\n      var _this2 = this;\n\n      this.new_brand.feature = this.list_feature;\n      this.new_brand.phone_number = this.customer.phone_number;\n      this.new_brand.email = this.customer.email;\n      this.new_brand.id_customer = this.customer.id;\n      HTTP_ADMIN.post('/brands', this.new_brand).then(function (result) {\n        if (result.data.status == 201) {\n          socket_bus.$emit('SHOW_ALERT', {\n            is_show: true,\n            message: _this2.$t('message_alert.create_brand_success'),\n            is_redirect: true,\n            brand: result.data.data\n          });\n          socket_bus.$emit('UPDATE_LIST_BRAND', {\n            data: result.data.data\n          });\n          socket_bus.$emit('CANCEL_ADD_BRAND', {\n            state: false\n          });\n        } else {\n          socket_bus.$emit('SHOW_ALERT', {\n            is_show: true,\n            message: _this2.$t('message_alert.create_brand_fail'),\n            is_redirect: true\n          });\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  },\n  computed: {\n    customer_filters: function customer_filters() {\n      var _this3 = this;\n\n      return this.customers.filter(function (item) {\n        return item.email.match(_this3.search_text.toLowerCase().trim());\n      });\n    }\n  },\n  created: function created() {\n    var _this4 = this;\n\n    this.handle_get_users();\n    this.$store.dispatch('get_categories').then(function (result) {\n      _this4.categories = result.data;\n    });\n    this.list_feature = [{\n      content: \"Equipments included\",\n      value: false\n    }, {\n      content: \"Need crowd\",\n      value: false\n    }, {\n      content: \"Low risk\",\n      value: false\n    }, {\n      content: \"Free Franchise Fee\",\n      value: false\n    }, {\n      content: \"Have decorated\",\n      value: false\n    }, {\n      content: \"Free Signing\",\n      value: false\n    }, {\n      content: \"Exemption premium\",\n      value: false\n    }, {\n      content: \"Education training\",\n      value: false\n    }, {\n      content: \"Free Margin\",\n      value: false\n    }];\n  }\n};",{"version":3,"sources":["FormAddBrand.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"block-model\" style=\"background: rgba(0,0,0,.5)\">\n        <div class=\"block-alert padding-full\">\n            <div class=\"block-header bg-title-header padding-full header-fix width-full\">\n                <p class=\"title-form\">{{$t('add_brand')}}</p>\n            </div>\n            <ValidationObserver v-slot=\"{ invalid }\" style=\"width: 100%; justify-content: center;\">\n                <form class=\"block-form\" style=\"padding: 8px 16px!important; width: 100%; max-height: 520px; overflow: auto;\" enctype=\"multipart/form-data\" @submit.prevent=\"handle_save\">\n                    <div class=\"form-group row-group\">\n                        <div class=\"form-group col-group margin-fix-right\">\n                            <span class=\"label-span\">{{$t('customer')}}:</span>\n                            <input type=\"text\" class=\"border-bottom-ol margin-bottom\" v-model=\"search_text\" v-on:click=\"is_show = true\">\n\n                            <div class=\"form-group col-group\" v-if=\"is_show\">\n                                <ul class=\"list-city\">\n                                    <li v-for=\"(item,index) in customer_filters\" v-on:click=\"handle_choose_customer(item)\" :key=\"index\" :value=\"item.id\"><p class=\"text-center\">{{item.full_name}}</p> </li>\n                                </ul>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-group\">\n                            <span class=\"label-span\">{{$t('name_customer')}}:</span>\n                            <input type=\"text\" class=\"border-bottom-ol margin-bottom\" v-model=\"customer.full_name\" readonly>\n                        </div>\n                    </div>\n                    <div class=\"form-group row-group\">\n                        <div class=\"form-group col-group margin-fix-right\">\n                            <span class=\"label-span margin-bottom\">{{$t('form_joining.category')}}</span>\n                            <ValidationProvider name=\"category\" rules=\"required\" v-slot=\"{ errors }\" style=\"width: 100%;\">\n                                <select name=\"category\"  class=\"list-joining\" v-model=\"new_brand.id_category\">\n                                    <option value=\"\" selected>-- {{$t('filter.choose_category')}} --</option>\n                                    <option v-bind:value=\"item.name\" v-for=\"(item, index) in categories\" :key=\"index\">{{handle_translate(item.name)}}</option>\n                                </select>\n                                <span class=\"error-text margin-fix-top\" >{{ errors[0] }}</span>\n                            </ValidationProvider>\n                        </div>\n                        <div class=\"form-group col-group\">\n                            <span class=\"label-span margin-bottom\">{{$t('user_page.brand_name')}}</span>\n                            <ValidationProvider name=\"name_brand\" rules=\"required\" v-slot=\"{ errors }\" style=\"width: 100%;\">\n                                <input type=\"text\" class=\"border-bottom-ol margin-bottom\" v-model=\"new_brand.name\" >\n                                <span class=\"error-text margin-fix-top\" >{{ errors[0] }}</span>\n                            </ValidationProvider>\n                        </div>\n                    </div>\n                    \n                    <div class=\"form-group row-group\" style=\"justify-content: center; margin-top: 8px;\">\n                        <div class=\"btn btn-cancel margin-fix-right\" style=\"color: #ED6B28; border: 1px solid #ED6B28\" v-on:click=\"handle_close()\">{{$t('cancel')}}</div>\n                        <button class=\"btn btn-signup\" :class=\"{'bg-title-header': !invalid, 'disable-button':invalid}\" :disabled=\"invalid\" >{{$t('save')}}</button>\n                    </div>\n                </form>\n            </ValidationObserver>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { socket_bus } from '../../../../main'\nimport {HTTP_ADMIN} from '../../../../http-common'\n\nexport default {\n    data() {\n        return {\n            is_show: false,\n            customers:[],\n            search_text: '',\n            customer: '',\n            categories: [],\n            category_selected: '',\n            list_feature:[],\n            new_brand: {\n                id_category: '',\n                id_customer: '',\n                name: '',\n                introduce: '',\n                phone_number: '',\n                email: '',\n                website: '',\n                feature: [],\n                events: [],\n                terms: [],\n                location: [],\n                head_office: 'No Info',\n                price: 1000,\n                offset_price:1000\n            },\n            images: '',\n            thumbnail: '',\n            main_banner: Array,\n            image_intro: Array\n\n        }\n    },\n    methods : {\n        handle_translate(name) {\n            var result = ''\n            switch(name) {\n                case 'Drink':\n                    result = this.$t('drink')\n                    break;\n                case 'Dessert':\n                    result = this.$t('dessert')\n                    break;\n                case 'Vietnamese Foods':\n                    result = this.$t('vn_food')\n                    break;\n                case 'Foriegn Foods':\n                    result = this.$t('foriegn_fd')\n                    break;\n                case 'BBQ':\n                    result = this.$t('bbq')\n                    break;\n                case 'Brunch':\n                    result = this.$t('brunch')\n                    break;\n                case 'Hot Pot':\n                    result = this.$t('hotpot')\n                    break;\n            }\n            return result;\n        },\n        handle_close() {\n            socket_bus.$emit('CANCEL_ADD_BRAND', {state: false})\n        },\n        handle_get_users() {\n            HTTP_ADMIN.get('/customers').then(result => {\n                this.customers = result.data.status == 200 ? result.data.data : []\n            }).catch(error => {\n                console.log(error)\n            })\n        },\n        handle_choose_customer(customer) {\n            this.customer = customer\n            this.is_show = false\n            this.search_text = customer.email\n        },\n        handleFileUpload(e) {\n            var files = e.target.files || e.dataTransfer.files;\n            if (!files.length)\n                return;\n            this.images = this.$refs.logo.files[0]\n            this.thumbnail = this.$refs.thumbnail.files[0]\n        },\n        handle_save() {\n            this.new_brand.feature = this.list_feature\n            this.new_brand.phone_number = this.customer.phone_number\n            this.new_brand.email = this.customer.email\n            this.new_brand.id_customer = this.customer.id\n            HTTP_ADMIN.post('/brands', this.new_brand).then(result => {\n                if(result.data.status == 201) {\n                    socket_bus.$emit('SHOW_ALERT', {is_show: true, message: this.$t('message_alert.create_brand_success'), is_redirect: true, brand: result.data.data})\n                    socket_bus.$emit('UPDATE_LIST_BRAND', {data: result.data.data})\n                    socket_bus.$emit('CANCEL_ADD_BRAND', {state: false})\n                } else {\n                    socket_bus.$emit('SHOW_ALERT', {is_show: true, message: this.$t('message_alert.create_brand_fail'), is_redirect: true})\n                }\n            }).catch(error => {\n                console.log(error);\n            })\n        }\n    },\n    computed: {\n         customer_filters() {\n           return this.customers.filter(item => {\n               return item.email.match(this.search_text.toLowerCase().trim())\n           })\n        },\n    },\n    created() {\n        this.handle_get_users()\n        this.$store.dispatch('get_categories').then(result => {\n            this.categories = result.data\n        })\n       \n        this.list_feature = [{content: \"Equipments included\", value: false}, {content: \"Need crowd\", value: false}, {content: \"Low risk\", value:false}, \n        {content: \"Free Franchise Fee\", value:false}, {content: \"Have decorated\", value:false}, {content: \"Free Signing\", value:false}, {content: \"Exemption premium\", value:false}\n        , {content:\"Education training\", value:false}, {content:\"Free Margin\", value:false}]\n    }\n}\n</script>"],"sourceRoot":"src/components/Pages/User/ui_user"}]}