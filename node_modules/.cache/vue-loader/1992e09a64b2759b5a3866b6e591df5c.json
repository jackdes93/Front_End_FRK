{"remainingRequest":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/src/components/Pages/Admin/Units/NavTop.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/src/components/Pages/Admin/Units/NavTop.vue","mtime":1583910566033},{"path":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { socket_bus } from '../../../../main';\nimport i18n from '@/lang/i18n.js'\n\nexport default {\n    data() {\n        return{\n            language: [],\n            language_selected: {},\n            toogle: false\n        }\n    },\n    methods: {\n        handle_show_menu($event) {\n            $event.stopPropagation()\n            this.is_menu = !this.is_menu\n        },\n        handle_toogle_lang($event) {\n            $event.stopPropagation();\n            this.toogle = !this.toogle\n        },\n        handle_choose(lang) {\n            this.language_selected = lang\n            this.$store.dispatch('setLang', lang.value)\n            socket_bus.$emit('CHANGE_LANG')\n            this.language = [\n                {\n                    name: 'Vietnamese',\n                    icon: '/img/vi.png',\n                    value: 'vn'\n                },\n                {\n                    name: 'English',\n                    icon: '/img/eng.png',\n                    value: 'en'\n                },\n                {\n                    name: 'Taiwan',\n                    icon: '/img/tw.png',\n                    value: 'tw'\n                }\n            ]\n            this.language = this.language.filter(item => {return item.value != this.language_selected.value})\n            setTimeout(() => {window.location.reload()}, 200)\n        },\n        handle_translate_language(language) {\n            switch(language) {\n                case 'Vietnamese':\n                    return this.$t('vn')\n                case 'English':\n                    return this.$t('en')\n                case 'Taiwan':\n                    return this.$t('tw')\n            }\n        },\n    },\n    mounted() {\n        this.$nextTick(() => {\n            window.addEventListener('click', () => {\n                if(this.toogle) {\n                    this.toogle = false\n                }\n            })\n        })\n    },\n    created() {\n        this.is_toogle = false;\n        this.language = [\n            {\n                name: 'Vietnamese',\n                icon: '/img/vi.png',\n                value: 'vn'\n            },\n            {\n                name: 'English',\n                icon: '/img/eng.png',\n                value: 'en'\n            },\n            {\n                name: 'Taiwan',\n                icon: '/img/tw.png',\n                value: 'tw'\n            }\n        ]\n        \n        this.language.map(item => {\n            if(item.value == i18n.locale) {\n                this.language_selected = item\n                this.language = this.language.filter(item => {return item.value != this.language_selected.value})\n            }\n        })\n\n    }\n}\n",{"version":3,"sources":["NavTop.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAqBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"NavTop.vue","sourceRoot":"src/components/Pages/Admin/Units","sourcesContent":["<template>\n    <div class=\"flex-box nav-top box-shadow padding-full \" style=\"position: fixed; z-index: 999; background: #000;\">\n        <div class=\"block-logo\">\n            <router-link to=\"/\">\n             <img src=\"http://franchiseking.vn/image/Logo-Light.png\" alt=\"LOGO\">\n            </router-link>\n        </div>\n        <div class=\"form-group row-group block-language\" style=\"padding: 12px; border: 1px solid #000\" v-on:click=\"handle_toogle_lang($event)\">\n            <i class=\"fas fa-globe margin-fix-right\"></i>\n            <span style=\"color: #FFF\">{{handle_translate_language(language_selected.name)}}</span>\n            <i class=\"fas fa-chevron-down margin-fix-left white\"></i>\n        </div>\n        <ul class=\"list-lang\" v-if=\"toogle\" style=\"top: 78px !important; right: 16px !important; left: unset\">\n            <li class=\"item-lang\" v-for=\"(lang,index) in language\" :key=\"index\" v-on:click=\"handle_choose(lang)\">\n                <span class=\"white\">{{handle_translate_language(lang.name)}}</span>\n            </li>\n        </ul>\n    </div>\n</template>\n\n<script>\nimport { socket_bus } from '../../../../main';\nimport i18n from '@/lang/i18n.js'\n\nexport default {\n    data() {\n        return{\n            language: [],\n            language_selected: {},\n            toogle: false\n        }\n    },\n    methods: {\n        handle_show_menu($event) {\n            $event.stopPropagation()\n            this.is_menu = !this.is_menu\n        },\n        handle_toogle_lang($event) {\n            $event.stopPropagation();\n            this.toogle = !this.toogle\n        },\n        handle_choose(lang) {\n            this.language_selected = lang\n            this.$store.dispatch('setLang', lang.value)\n            socket_bus.$emit('CHANGE_LANG')\n            this.language = [\n                {\n                    name: 'Vietnamese',\n                    icon: '/img/vi.png',\n                    value: 'vn'\n                },\n                {\n                    name: 'English',\n                    icon: '/img/eng.png',\n                    value: 'en'\n                },\n                {\n                    name: 'Taiwan',\n                    icon: '/img/tw.png',\n                    value: 'tw'\n                }\n            ]\n            this.language = this.language.filter(item => {return item.value != this.language_selected.value})\n            setTimeout(() => {window.location.reload()}, 200)\n        },\n        handle_translate_language(language) {\n            switch(language) {\n                case 'Vietnamese':\n                    return this.$t('vn')\n                case 'English':\n                    return this.$t('en')\n                case 'Taiwan':\n                    return this.$t('tw')\n            }\n        },\n    },\n    mounted() {\n        this.$nextTick(() => {\n            window.addEventListener('click', () => {\n                if(this.toogle) {\n                    this.toogle = false\n                }\n            })\n        })\n    },\n    created() {\n        this.is_toogle = false;\n        this.language = [\n            {\n                name: 'Vietnamese',\n                icon: '/img/vi.png',\n                value: 'vn'\n            },\n            {\n                name: 'English',\n                icon: '/img/eng.png',\n                value: 'en'\n            },\n            {\n                name: 'Taiwan',\n                icon: '/img/tw.png',\n                value: 'tw'\n            }\n        ]\n        \n        this.language.map(item => {\n            if(item.value == i18n.locale) {\n                this.language_selected = item\n                this.language = this.language.filter(item => {return item.value != this.language_selected.value})\n            }\n        })\n\n    }\n}\n</script>"]}]}