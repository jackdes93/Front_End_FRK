{"remainingRequest":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/src/components/Pages/User/ui_user/Detail-Brand.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/src/components/Pages/User/ui_user/Detail-Brand.vue","mtime":1583341298557},{"path":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {socket_bus} from '../../../../main'\nimport { HTTP } from '../../../../http-common';\nimport datepicker from 'vuejs-datepicker';\n\nexport default {\n    components: { datepicker },\n    data() {\n        return {\n            is_show: false,\n            add_event: false,\n            brand: {},\n            categories: [],\n            list_feature:[],\n            location_selected: '',\n            locations: [],\n            current_location: [],\n            events: [],\n            event: {name: '', created_on: new Date()},\n            format: 'dd/MM/yyyy',\n        }\n    },\n    methods: {\n        handle_translate(name) {\n            var result = ''\n            switch(name) {\n                case 'Drink':\n                    result = this.$t('drink')\n                    break;\n                case 'Dessert':\n                    result = this.$t('dessert')\n                    break;\n                case 'Vietnamese Foods':\n                    result = this.$t('vn_food')\n                    break;\n                case 'Foriegn Foods':\n                    result = this.$t('foriegn_fd')\n                    break;\n                case 'BBQ':\n                    result = this.$t('bbq')\n                    break;\n                case 'Brunch':\n                    result = this.$t('brunch')\n                    break;\n                case 'Hot Pot':\n                    result = this.$t('hotpot')\n                    break;\n            }\n            return result;\n        },\n        handle_translate_feature(name) {\n            var result = ''\n            switch(name) {\n                case 'Equipments included':\n                    result = this.$t('list_special.equiment')\n                    break;\n                case 'Need crowd':\n                    result = this.$t('list_special.crowd')\n                    break;\n                case 'Low risk':\n                    result = this.$t('list_special.risk')\n                    break;\n                case 'Free Franchise Fee':\n                    result = this.$t('list_special.free_franchise_fee')\n                    break;\n                case 'Have decorated':\n                    result = this.$t('list_special.decorate')\n                    break;\n                case 'Free Signing':\n                    result = this.$t('list_special.free_signing')\n                    break;\n                case 'Exemption premium':\n                    result = this.$t('list_special.exemption_premium')\n                    break;\n                case 'Education training':\n                    result = this.$t('list_special.education_training')\n                    break;\n                case 'Free Margin':\n                    result = this.$t('list_special.free_margin')\n                    break;\n            }\n            return result;\n        },\n        handle_close() {\n            this.brand = null;\n        },\n        handle_check_length() {\n            if(this.brand.introduce.length > 150) {\n                socket_bus.$emit('SHOW_MESSAGE', { message: this.$t('max_length')})\n            }\n        },\n        handle_update() {\n            if(this.brand.video_intro != undefined) { \n                this.brand.video_intro = this.brand.video_intro.replace('watch?v=', 'embed/')\n            }\n            \n            HTTP.patch('/brands/' + this.brand.id, this.brand).then(result => {\n                if(result.data.status == 200) {\n                    socket_bus.$emit('SHOW_MESSAGE', { message: this.$t('message_alert.update_brand_success')})\n                    this.is_show = false\n                } else {\n                    socket_bus.$emit('SHOW_MESSAGE', {message: this.$t('message_alert.update_brand_fail')})\n                }\n            }).catch(error => {\n                console.log('Error: ' + error)\n            })\n        },\n        handle_format(event) {\n            this.brand.price = parseInt(event.target.value)\n        },\n        handle_choose_locations(location) {\n            this.brand.location.length = 0\n            this.current_location.indexOf(location) == -1 ? this.brand.location.push(location) : ''\n        },\n        handle_remove_event(event) {\n            this.brand.events.splice(this.brand.events.indexOf(event), 1)\n        },\n        handle_add_new_event() {\n            this.brand.events.push(this.event)\n            this.add_event = false\n            this.event = {name: '', created_on: new Date()}\n        },\n        handle_get_list_city() {\n           return new Promise((resolve, reject) => {\n                HTTP.get('/cities/').then(result => {\n                    if(result.data.status == 200) {\n                        this.locations = result.data.data\n                    } \n                }).catch(error => {\n                    console.log(error);\n                    reject(error)\n                })\n           })\n        }\n    },\n    created() {\n        this.handle_get_list_city()\n        this.$store.dispatch('get_categories').then(result => {\n            this.categories = result.data\n        })\n        socket_bus.$on('EDIT_BRAND', result => {\n            this.brand = result.data\n            this.list_feature = this.brand.feature\n            this.current_location = this.brand.location\n            this.is_show = true\n        })\n    }\n}\n",{"version":3,"sources":["Detail-Brand.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"Detail-Brand.vue","sourceRoot":"src/components/Pages/User/ui_user","sourcesContent":["<template>\n     <div class=\"block-model\" style=\"background: rgba(0,0,0,.5)\" v-if=\"is_show\">\n        <div class=\"block-alert padding-full\" style=\"padding: 0 16px;\">\n            <div class=\"block-header bg-title-header padding-full header-fix width-full\">\n                <p class=\"title-form\"> {{brand.name}}</p>\n            </div>\n            <ValidationObserver v-slot=\"{ invalid }\" style=\"width: 100%; justify-content: center;\">\n                <form class=\"block-form\" style=\"padding: 8px 16px!important; width: 100%;  max-height: 480px; overflow:auto;\" enctype=\"multipart/form-data\" @submit.prevent=\"handle_update\">\n                    <div class=\"form-group row-group\">\n                        <div class=\"form-group col-group margin-fix-right\">\n                            <span class=\"label-span margin-bottom\">{{$t('form_joining.category')}}</span>\n                            <ValidationProvider name=\"category\" rules=\"required\" v-slot=\"{ errors }\" style=\"width: 100%;\">\n                                <select name=\"category\"  class=\"list-joining\" v-model=\"brand.id_category\" style=\"font-size: 14px; color: #333\" >\n                                    <option value=\"\" selected>-- {{$t('filter.choose_category')}} --</option>\n                                    <option v-bind:value=\"item.name\" v-for=\"(item, index) in categories\" :key=\"index\">{{handle_translate(item.name)}}</option>\n                                </select>\n                                <span class=\"error-text margin-fix-top\" >{{ errors[0] }}</span>\n                            </ValidationProvider>\n                        </div>\n                        <div class=\"form-group col-group\">\n                            <span class=\"label-span margin-bottom\">{{$t('name_brand')}}</span>\n                            <input type=\"text\" class=\"border-bottom-ol margin-bottom\" v-model=\"brand.name\" name=\"name\" readonly>\n                        </div>\n                    </div>\n                    <div class=\"form-group row-group\">\n                        <div class=\"form-group col-group margin-fix-right\">\n                            <span class=\"label-span margin-bottom\">{{$t('form_joining.phone_number')}}</span>\n                            <ValidationProvider name=\"phone_number\" rules=\"required|regex:^([0-9]+)$\" v-slot=\"{ errors }\" style=\"width: 100%;\">\n                                <input type=\"text\" name=\"phone_number\" v-model=\"brand.phone_number\" class=\"border-bottom-ol\">\n                                <span class=\"error-text margin-fix-top\" >{{ errors[0] }}</span>\n                            </ValidationProvider>\n                        </div>\n                        <div class=\"form-group col-group \">\n                            <span class=\"label-span margin-bottom\">Email</span>\n                            <ValidationProvider name=\"email\" rules=\"required|email\" v-slot=\"{ errors }\" style=\"width: 100%;\">\n                                <input type=\"text\" name=\"email\" v-model=\"brand.email\" class=\"border-bottom-ol\" >\n                                <span class=\"error-text margin-fix-top\" >{{ errors[0] }}</span>\n                            </ValidationProvider>\n                        </div>\n                    </div>\n                    <div class=\"form-group row-group\" v-if=\"brand.level == 'VIP'\">\n                        <div class=\"form-group col-group margin-fix-right\">\n                            <span class=\"label-span margin-bottom\">{{$t('brand_info.video_intro')}}</span>\n                            <input type=\"text\" class=\"border-bottom-ol\" v-model=\"brand.video_intro\" name=\"video_intro\">\n                        </div>\n                        <div class=\"form-group col-group\">\n                            <span class=\"label-span margin-bottom\">Slogan</span>\n                            <input type=\"text\" class=\"border-bottom-ol\" v-model=\"brand.slogan\" name=\"slogan\">\n                        </div>\n                    </div>\n                    <div class=\"form-group row-group\">\n                        <div class=\"form-group col-group margin-fix-right\">\n                            <div class=\"form-group row-group\" style=\"justify-content: flex-start; margin-bottom:0\">\n                                <span class=\"label-span margin-fix-right\">{{$t('brand_info.offset_price')}}: </span>\n                                <p class=\"label-span\" style=\"font-size: 14px; height: 28px; color: #F34343\">{{parseInt(brand.offset_price).toLocaleString()}} <sup>đ</sup></p>\n                            </div>\n                            <ValidationProvider name=\"offset_price\" rules=\"required|regex:^([0-9]+)$\" v-slot=\"{ errors }\" style=\"width: 100%;\">\n                                <input type=\"text\" name=\"offset_price\"  v-model=\"brand.offset_price\" class=\"border-bottom-ol\">\n                                <span class=\"error-text margin-fix-top\" >{{ errors[0] }}</span>\n                            </ValidationProvider>\n                        </div>\n                        <div class=\"form-group col-group\">\n                            <div class=\"form-group row-group\" style=\"justify-content: flex-start; margin-bottom:0\">\n                                <span class=\"label-span margin-fix-right\">{{$t('price')}}: </span>\n                                <p class=\"label-span\" style=\"font-size: 14px; height: 28px; color: #F34343\">{{parseInt(brand.price).toLocaleString()}} <sup>đ</sup></p>\n                            </div>\n                            <ValidationProvider name=\"price\" rules=\"required|regex:^([0-9]+)$\" v-slot=\"{ errors }\" style=\"width: 100%;\">\n                                <input type=\"text\" name=\"price\"  v-model=\"brand.price\" class=\"border-bottom-ol\" >\n                                <span class=\"error-text margin-fix-top\" >{{ errors[0] }}</span>\n                            </ValidationProvider>\n                        </div>\n                    </div>\n                    <div class=\"form-group row-group\">\n                        <div class=\"form-group col-group margin-fix-right\">\n                            <span class=\"label-span margin-bottom\">{{$t('form_joining.location')}}</span>\n                            <select name=\"category\"  class=\"list-joining\" v-model=\"location_selected\" style=\"font-size: 14px; color: #333\" @change=\"handle_choose_locations(location_selected)\">\n                                <option value=\"\" selected>-- {{$t('filter.choose_locations')}} --</option>\n                                <option v-bind:value=\"item.name\" v-for=\"(item, index) in locations\" :key=\"index\">{{item.name}}</option>\n                            </select>\n                            <textarea v-model=\"brand.location\" cols=\"30\" rows=\"2\" class=\"padding-full\" style=\"max-height: 90px\" disabled></textarea>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-group margin-bottom\">\n                        <span class=\"label-span margin-bottom\">{{$t('head_office')}}</span>\n                        <ValidationProvider name=\"head_office\" rules=\"required\" v-slot=\"{ errors }\" style=\"width: 100%;\">\n                            <input type=\"text\" name=\"head_office\" v-model=\"brand.head_office\" class=\"border-bottom-ol\" >   \n                            <span class=\"error-text margin-fix-top\" >{{ errors[0] }}</span>\n                        </ValidationProvider>\n                    </div>\n                    <div class=\"form-group col-group\">\n                        <span class=\"label-span margin-bottom\">{{$t('about_brand')}}</span>\n                        <ValidationProvider name=\"introduce\" rules=\"required|max:120\" v-slot=\"{ errors }\" style=\"width: 100%;\">\n                            <textarea name=\"introduce\" v-model=\"brand.introduce\" cols=\"30\" rows=\"5\" class=\"padding-full\" style=\"max-height: 120px\"></textarea>\n                            <span class=\"label\">{{$t('max_length')}}</span>\n                            <span class=\"error-text margin-fix-top\" >{{ errors[0] }}</span>\n                        </ValidationProvider>\n                    </div>\n                    <div class=\"form-group col-group\">\n                        <span class=\"label-span margin-bottom\">{{$t('about_feature')}}</span>\n                        <div class=\"form-group row-group\" style=\"flex-wrap: wrap\">\n                            <div class=\"form-group col-group\" style=\"width: 33.3%;\" v-for=\"(feature, index) in list_feature\" :key=\"index\">\n                                <span class=\"label-span margin-bottom-fix\">{{handle_translate_feature(feature.content)}}</span>\n                                <div class=\"form-group row-group margin-fix-right\">\n                                    <div class=\"form-group radio-btn\">\n                                        <input type=\"radio\" :value=\"true\" v-model=\"feature.value\" style=\"width: 40px;\">\n                                        <p class=\"label-option text-uppercase\">{{$t('yes')}}</p>\n                                    </div>\n                                    <div class=\"form-group radio-btn row-group\">\n                                        <input type=\"radio\" :value=\"false\" v-model=\"feature.value\" style=\"width: 40px;\">\n                                        <p class=\"label-option text-uppercase\">{{$t('no')}}</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-group\">\n                        <span class=\"label-span margin-bottom\">{{$t('events')}}</span>\n                        <div class=\"form-group row-group\" style=\"justify-content: flex-end\">\n                            <span v-on:click=\"add_event = true\"><i class=\"far fa-calendar-plus\"></i></span>\n                        </div>\n                        <div class=\"form-group col-group\" v-if=\"brand.events != null\">\n                            <div class=\"form-group row-group\" v-for=\"(item, index) in brand.events\" :key=\"index\">\n                                <span class=\"label-span\">{{item.name}}</span>\n                                <span class=\"label-span\">{{new Date(item.created_on).toLocaleString().split(',')[0]}}</span>\n                                <span class=\"label-span\" v-on:click=\"handle_remove_event(item)\"><i class=\"fas fa-trash-alt\"></i></span>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"block-model\" style=\"background: rgba(0,0,0,.5)\" v-if=\"add_event\">\n                        <div class=\"block-alert padding-full\" style=\"width: 25%;\">\n                            <div class=\"block-header bg-title-header padding-full header-fix width-full\">\n                                <p class=\"title-form\">{{$t('add_event')}}</p>\n                            </div>\n                            <div class=\"form-group col-group\">\n                                <div class=\"form-group col-group\">\n                                    <span class=\"label-span margin-bottom\">{{$t('title_event')}}</span>\n                                    <ValidationProvider name=\"name_event\" rules=\"required\" v-slot=\"{ errors }\" style=\"width: 100%;\">\n                                        <input type=\"text\" name=\"name_event\" :placeholder=\"`${$t('title_event')}`\" v-model=\"event.name\">\n                                        <span class=\"error-text margin-fix-top\" >{{ errors[0] }}</span>\n                                    </ValidationProvider>\n                                </div>\n                                <div class=\"form-group col-group\">\n                                    <span class=\"label-span margin-bottom\">{{$t('date_start')}}</span>\n                                    <datepicker placeholder=\"Choose Date Start\" class=\"date_picker\" :format=\"format\" v-model=\"event.created_on\"></datepicker>\n                                </div>\n                                <div class=\"form-group row-group margin-fix-top\">\n                                    <div class=\"btn btn-cancel\" style=\"color: #ED6B28; border: 1px solid #ED6B28\" v-on:click=\"add_event = false\">{{$t('cancel')}}</div>\n                                    <button class=\"btn btn-signup bg-title-header\" v-on:click=\"handle_add_new_event()\">{{$t('save')}}</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group row-group\" style=\"justify-content: center; margin-top: 8px; padding: 16px 0px;\">\n                        <div class=\"btn btn-cancel margin-fix-right\" style=\"color: #ED6B28; border: 1px solid #ED6B28\" v-on:click=\"is_show = !is_show\">{{$t('cancel')}}</div>\n                        <button class=\"btn btn-signup\" :class=\"{'bg-title-header': !invalid, 'disable-button':invalid}\" :disabled=\"invalid\" >{{$t('save')}}</button>\n                    </div>\n                </form>\n            </ValidationObserver>\n        </div>\n    </div>\n</template>\n\n<script>\nimport {socket_bus} from '../../../../main'\nimport { HTTP } from '../../../../http-common';\nimport datepicker from 'vuejs-datepicker';\n\nexport default {\n    components: { datepicker },\n    data() {\n        return {\n            is_show: false,\n            add_event: false,\n            brand: {},\n            categories: [],\n            list_feature:[],\n            location_selected: '',\n            locations: [],\n            current_location: [],\n            events: [],\n            event: {name: '', created_on: new Date()},\n            format: 'dd/MM/yyyy',\n        }\n    },\n    methods: {\n        handle_translate(name) {\n            var result = ''\n            switch(name) {\n                case 'Drink':\n                    result = this.$t('drink')\n                    break;\n                case 'Dessert':\n                    result = this.$t('dessert')\n                    break;\n                case 'Vietnamese Foods':\n                    result = this.$t('vn_food')\n                    break;\n                case 'Foriegn Foods':\n                    result = this.$t('foriegn_fd')\n                    break;\n                case 'BBQ':\n                    result = this.$t('bbq')\n                    break;\n                case 'Brunch':\n                    result = this.$t('brunch')\n                    break;\n                case 'Hot Pot':\n                    result = this.$t('hotpot')\n                    break;\n            }\n            return result;\n        },\n        handle_translate_feature(name) {\n            var result = ''\n            switch(name) {\n                case 'Equipments included':\n                    result = this.$t('list_special.equiment')\n                    break;\n                case 'Need crowd':\n                    result = this.$t('list_special.crowd')\n                    break;\n                case 'Low risk':\n                    result = this.$t('list_special.risk')\n                    break;\n                case 'Free Franchise Fee':\n                    result = this.$t('list_special.free_franchise_fee')\n                    break;\n                case 'Have decorated':\n                    result = this.$t('list_special.decorate')\n                    break;\n                case 'Free Signing':\n                    result = this.$t('list_special.free_signing')\n                    break;\n                case 'Exemption premium':\n                    result = this.$t('list_special.exemption_premium')\n                    break;\n                case 'Education training':\n                    result = this.$t('list_special.education_training')\n                    break;\n                case 'Free Margin':\n                    result = this.$t('list_special.free_margin')\n                    break;\n            }\n            return result;\n        },\n        handle_close() {\n            this.brand = null;\n        },\n        handle_check_length() {\n            if(this.brand.introduce.length > 150) {\n                socket_bus.$emit('SHOW_MESSAGE', { message: this.$t('max_length')})\n            }\n        },\n        handle_update() {\n            if(this.brand.video_intro != undefined) { \n                this.brand.video_intro = this.brand.video_intro.replace('watch?v=', 'embed/')\n            }\n            \n            HTTP.patch('/brands/' + this.brand.id, this.brand).then(result => {\n                if(result.data.status == 200) {\n                    socket_bus.$emit('SHOW_MESSAGE', { message: this.$t('message_alert.update_brand_success')})\n                    this.is_show = false\n                } else {\n                    socket_bus.$emit('SHOW_MESSAGE', {message: this.$t('message_alert.update_brand_fail')})\n                }\n            }).catch(error => {\n                console.log('Error: ' + error)\n            })\n        },\n        handle_format(event) {\n            this.brand.price = parseInt(event.target.value)\n        },\n        handle_choose_locations(location) {\n            this.brand.location.length = 0\n            this.current_location.indexOf(location) == -1 ? this.brand.location.push(location) : ''\n        },\n        handle_remove_event(event) {\n            this.brand.events.splice(this.brand.events.indexOf(event), 1)\n        },\n        handle_add_new_event() {\n            this.brand.events.push(this.event)\n            this.add_event = false\n            this.event = {name: '', created_on: new Date()}\n        },\n        handle_get_list_city() {\n           return new Promise((resolve, reject) => {\n                HTTP.get('/cities/').then(result => {\n                    if(result.data.status == 200) {\n                        this.locations = result.data.data\n                    } \n                }).catch(error => {\n                    console.log(error);\n                    reject(error)\n                })\n           })\n        }\n    },\n    created() {\n        this.handle_get_list_city()\n        this.$store.dispatch('get_categories').then(result => {\n            this.categories = result.data\n        })\n        socket_bus.$on('EDIT_BRAND', result => {\n            this.brand = result.data\n            this.list_feature = this.brand.feature\n            this.current_location = this.brand.location\n            this.is_show = true\n        })\n    }\n}\n</script>"]}]}