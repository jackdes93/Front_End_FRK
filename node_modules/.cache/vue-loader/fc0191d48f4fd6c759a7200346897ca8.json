{"remainingRequest":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/src/components/Pages/User/ui_user/YourBrand.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/src/components/Pages/User/ui_user/YourBrand.vue","mtime":1574676362637},{"path":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {HTTP} from '../../../../http-common'\nimport detail_brand from './Detail-Brand'\nimport { socket_bus } from '../../../../main'\n\nexport default {\n    components: { detail_brand,\n    },\n    data() {\n        return {\n            customer: {},\n            brands: [],\n            brand_selected: null,\n            is_add: false,\n            is_change_image: false,\n            images: '',\n            thumbnail: '',\n            main_banner: '',\n            image_intro: '',\n            menu: '',\n            logo:'',\n            is_logo: '',\n            qr_code_image: '',\n            url_preview: null,\n        }\n    },\n    methods: {\n        handle_translate(name) {\n            var result = ''\n            switch(name) {\n                case 'Drink':\n                    result = this.$t('drink')\n                    break;\n                case 'Dessert':\n                    result = this.$t('dessert')\n                    break;\n                case 'Vietnamese Foods':\n                    result = this.$t('vn_food')\n                    break;\n                case 'Foriegn Foods':\n                    result = this.$t('foriegn_fd')\n                    break;\n                case 'BBQ':\n                    result = this.$t('bbq')\n                    break;\n                case 'Brunch':\n                    result = this.$t('brunch')\n                    break;\n                case 'Hot Pot':\n                    result = this.$t('hotpot')\n                    break;\n            }\n            return result;\n        },\n        handle_get_brands() {\n            this.$store.dispatch('handle_get_brands').then (result => {\n                this.brands = result.status == 200 ? result.data : []\n            })\n        },\n        handle_change() {\n            if(this.url_preview) {\n                socket_bus.$emit('SHOW_MESSAGE_UPLOAD_IMAGE', {message: 'You want to save image ?'})\n            }\n        },\n        handle_add_brand() {\n            this.is_add = true;\n        },\n        handle_edit(brand) {\n           socket_bus.$emit('EDIT_BRAND', {data: brand })\n           console.log('brand');\n        },\n        handle_delete_brand(brand) {\n            socket_bus.$emit('DELETE_BRAND', {data: brand })\n        },\n        handle_update_image(brand) {\n            this.brand_selected = brand\n        },\n        handle_delete_link(index) {\n             if(this.is_logo == 'MAIN_BANNER' || this.is_logo == 'IMAGE_INTRO' || this.is_logo == 'MENU') {\n                this.url_preview = null,\n                this.main_banner = ''\n                this.image_intro = ''\n                this.$refs.logo = []\n                this.menu = ''\n            } else {\n                this.url_preview = null,\n                this.logo = ''\n                this.qr_code_image = ''\n                this.thumbnail = ''\n                this.$refs.logo = []\n            }\n        },\n        handleFileUpload(e) {\n            this.url_preview = []\n            var files = e.target.files || e.dataTransfer.files;\n            var _URL = window.URL || window.webkitURL;\n             var image = new Image()\n            if (!files.length)\n                return;\n            this.qr_code_image = files[0]\n            this.logo = files[0],\n            this.images = files[0];\n            this.thumbnail = files[0]\n            this.main_banner = files\n            this.image_intro = files\n            this.menu = files\n\n            if(this.main_banner.length > 2) {\n                socket_bus.$emit('SHOW_MESSAGE', {message: 'Main Banner Only 2 Picture'})\n                this.main_banner = []\n                e.target.value = ''\n            } else if(this.image_intro.length > 5) {\n                socket_bus.$emit('SHOW_MESSAGE', {message: 'Image Intro Only 5 Picture'})\n                this.image_intro = []\n                e.target.value = ''\n            } else if(this.menu.length > 5) {\n                socket_bus.$emit('SHOW_MESSAGE', {message: 'Menu Only 5 Picture'})\n                this.menu = []\n                e.target.value = ''\n            }\n\n            switch(this.is_logo) {\n                case 'LOGO':\n                    image.src = _URL.createObjectURL(files[0]);\n                    image.onload = () => {\n                        if(image.width != 270 || image.height != 270 ) {\n                            socket_bus.$emit('SHOW_MESSAGE', {message: 'Size image upload is over rules'})\n                            this.logo = null\n                            e.target.value = ''\n                        } else {\n                            this.url_preview.push(URL.createObjectURL(files[0]));\n                        }\n                    }\n                    break;\n                case 'THUMBNAIL':\n                    image.src = _URL.createObjectURL(files[0]);\n                    image.onload = () => {\n                        if(image.width != 870 || image.height != 270 ) {\n                            socket_bus.$emit('SHOW_MESSAGE', {message: 'Size image upload is over rules'})\n                            this.thumbnail = null\n                            e.target.value = ''\n                        } else {\n                            this.url_preview.push(URL.createObjectURL(files[0]));\n                        }\n                    }\n                    break;\n                case 'MAIN_BANNER':\n                    for(var i = 0; i < files.length; i++) {\n                        image.src = _URL.createObjectURL(files[i]);\n                        image.onload = () => {\n                            if(image.width != 960 || image.height != 720 ) {\n                                socket_bus.$emit('SHOW_MESSAGE', {message: 'Size image upload is over rules'})\n                                this.main_banner = null\n                                e.target.value = ''\n                                this.url_preview = null\n                            } else {\n                                for(i = 0; i < files.length; i++) {\n                                    this.url_preview.push(URL.createObjectURL(files[i]));\n                                }\n                            }\n                        }\n                    }\n                    break;\n                case 'IMAGE_INTRO':\n                    for(i = 0; i < files.length; i++) {\n                        image.src = _URL.createObjectURL(files[i]);\n                        image.onload = () => {\n                            if(image.width != 960 || image.height != 720 ) {\n                                socket_bus.$emit('SHOW_MESSAGE', {message: 'Size image upload is over rules'})\n                                this.image_intro = null\n                                e.target.value = ''\n                                this.url_preview = null\n                            } else {\n                               for(i = 0; i < files.length; i++) {\n                                    this.url_preview.push(URL.createObjectURL(files[i]));\n                                }\n                            }\n                        }\n                    }\n                    break;\n                case 'MENU':\n                    for(i = 0; i < files.length; i++) {\n                        image.src = _URL.createObjectURL(files[i]);\n                        image.onload = () => {\n                            if(image.width != 960 || image.height != 720 ) {\n                                socket_bus.$emit('SHOW_MESSAGE', {message: 'Size image upload is over rules'})\n                                this.image_intro = null\n                                e.target.value = ''\n                                this.url_preview = null\n                            } else {\n                               for(i = 0; i < files.length; i++) {\n                                    this.url_preview.push(URL.createObjectURL(files[i]));\n                                }\n                            }\n                        }\n                    }\n                    break;\n                case 'QR_CODE':\n                    image.src = _URL.createObjectURL(files[0]);\n                    image.onload = () => {\n                        if(image.width != 90 || image.height != 90 ) {\n                            socket_bus.$emit('SHOW_MESSAGE', {message: 'Size image upload is over rules'})\n                            this.logo = null\n                            e.target.value = ''\n                        } else {\n                            this.url_preview.push(URL.createObjectURL(files[0]));\n                        }\n                    }\n                    break;\n            }\n            \n        },\n        handle_upload() {\n            switch(this.is_logo) {\n                case 'LOGO':\n                    this.handle_up_logo();\n                    break;\n                case 'THUMBNAIL':\n                    this.handle_up_thumbnail();\n                    break;\n                case 'MAIN_BANNER':\n                    this.handle_up_main_banner();\n                    break;\n                case 'IMAGE_INTRO':\n                    this.handle_up_image_intro();\n                    break;\n                case 'MENU':\n                    this.handle_up_menu();\n                    break;\n                case 'QR_CODE':\n                    this.handle_up_qr_code_image();\n                    break;\n            }\n        },\n        handle_up_logo() {\n            const data_form = new FormData()\n            data_form.append('name', this.brand_selected.id)\n            data_form.append('logo', this.logo);\n\n            return new Promise((resolve, reject) => {\n                HTTP.post('/brands/upload-logo/' + this.brand_selected.id, data_form, {\n                    headers: {\n                        'Content-Type' : 'multipart/form-data'\n                    }\n                }).then(result => {\n                    resolve(result)\n                    if(result.data.status == 200) {\n                        setTimeout(() => {window.location.reload()}, 3000) \n                        socket_bus.$emit('SHOW_MESSAGE',{message: 'Update Image Success !!!'})\n                    } else {\n                        socket_bus.$emit('SHOW_MESSAGE',{message: 'Update Image Fail !!!'})\n                    }\n                }).catch(error => {\n                    reject(error)\n                    console.log('Error: ' + error);\n                })\n            })\n        },\n        handle_up_thumbnail() {\n            const data_form = new FormData();\n            data_form.append(\"name\", this.brand_selected.id)\n            data_form.append(\"thumbnail\", this.thumbnail)\n            \n            return new Promise((resolve, reject) => {\n                HTTP.post('/brands/upload-thumbnail/' + this.brand_selected.id, data_form, {\n                    headers: {\n                        'Content-Type' : 'multipart/form-data'\n                    }\n                }).then(result => {\n                    resolve(result)\n                    if(result.data.status == 200) {\n                        window.location.reload()\n                        alert('Update Image Success !!!')\n                    } else {\n                        alert('Update Image Fail !!!')\n                    }\n                }).catch(error => {\n                    reject(error)\n                    console.log('Error: ' + error);\n                })\n            })\n        },\n        handle_up_qr_code_image() {\n            const data_form = new FormData();\n            data_form.append(\"name\", this.brand_selected.id)\n            data_form.append(\"qr_code_image\", this.thumbnail)\n            \n            return new Promise((resolve, reject) => {\n                HTTP.post('/brands/upload-qr-code/' + this.brand_selected.id, data_form, {\n                    headers: {\n                        'Content-Type' : 'multipart/form-data'\n                    }\n                }).then(result => {\n                    resolve(result)\n                    if(result.data.status == 200) {\n                        window.location.reload()\n                        alert('Update Qr Code Success !!!')\n                    } else {\n                        alert('Update Qr Code Fail !!!')\n                    }\n                }).catch(error => {\n                    reject(error)\n                    console.log('Error: ' + error);\n                })\n            })\n        },\n        handle_up_main_banner() {\n            const data_form = new FormData();\n            data_form.append(\"name\", this.brand_selected.id)\n            for(let i = 0; i < this.main_banner.length; i++) {\n                data_form.append('main_banner', this.main_banner[i])\n            }\n\n            return new Promise((resolve, reject) => {\n                HTTP.post('/brands/upload-banners/' + this.brand_selected.id, data_form, {\n                    headers: {\n                         'Content-Type' : 'multipart/form-data'\n                    }\n                }).then(result => {\n                    resolve(result)\n                    if(result.data.status == 200) {\n                        window.location.reload()\n                        alert('Update Image Success !!!')\n                    } else {\n                        alert('Update Image Fail !!!')\n                    }\n                }).catch(error => {\n                    reject(error)\n                    console.log('Error: ' + error);\n                })\n            })\n        },\n        handle_up_image_intro() {\n            const data_form = new FormData();\n            data_form.append(\"name\", this.brand_selected.id)\n            for(let i = 0; i < this.image_intro.length; i++) {\n                data_form.append('image_intro', this.image_intro[i])\n            }\n\n            return new Promise((resolve, reject) => {\n                HTTP.post('/brands/upload-intro-image/' + this.brand_selected.id, data_form, {\n                    headers: {\n                         'Content-Type' : 'multipart/form-data'\n                    }\n                }).then(result => {\n                    resolve(result)\n                    if(result.data.status == 200) {\n                        window.location.reload()\n                        alert('Update Image Success !!!')\n                    } else {\n                        alert('Update Image Fail !!!')\n                    }\n                }).catch(error => {\n                    reject(error)\n                    console.log('Error: ' + error);\n                })\n            })\n        },\n        handle_up_menu() {\n            const data_form = new FormData();\n            data_form.append(\"name\", this.brand_selected.id)\n            for(let i = 0; i < this.menu.length; i++) {\n                data_form.append('menu', this.menu[i])\n            }\n\n            return new Promise((resolve, reject) => {\n                HTTP.post('/brands/upload-menu/' + this.brand_selected.id, data_form, {\n                    headers: {\n                        'Content-Type' : 'multipart/form-data'\n                    }\n                }).then(result => {\n                    resolve(result)\n                    if(result.data.status == 200) {\n                       this.brand_selected = null\n                       socket_bus.$emit('SHOW_MESSAGE',{message: 'Update Image Success !!!'})\n                        setTimeout(() => {window.location.reload()}, 3000) \n                        \n                    } else {\n                        socket_bus.$emit('SHOW_MESSAGE',{message: 'Update Image Fail !!!'})\n                    }\n                }).catch(error => {\n                    reject(error)\n                    console.log('Error: ' + error);\n                })\n            })\n        },\n        handle_close_form_up() {\n            this.is_logo = null\n            this.brand_selected = null\n            this.logo = null\n            this.main_banner = null\n            this.image_intro = null\n            this.thumbnail = null\n            this.url_preview = null\n        }\n    },\n    created() {\n        this.handle_get_brands()\n\n        socket_bus.$on('CANCEL_ADD_BRAND', result => {\n            this.is_add = result.state\n        })\n\n        socket_bus.$on(\"UPDATE_LIST_BRAND\", result => {\n            this.brands.push(result.data)\n        })\n\n        socket_bus.$on('RESPONSE_DELETE', result => {\n            if(result.is_delete) {\n                this.brands.splice(this.brands.indexOf(result.data), 1)\n                HTTP.delete('/brands/' + result.data.id).then(result => {\n                    if(result.data.status == 200) {\n                        socket_bus.$emit('SHOW_MESSAGE',{message: 'Delete Brand Success !!!'})\n                    } else {\n                        socket_bus.$emit('SHOW_MESSAGE',{message: 'Delete Brand Fail !!!'})\n                    }\n                })\n                .catch(error => {\n                    console.log('Error Delete: ' + error);\n                })\n            }\n        })\n\n        socket_bus.$on('CLOSE_BOX', result => {\n            this.handle_get_brands()\n        })\n\n        socket_bus.$on('RESULT_UPLOAD_IMAGE', result => {\n            if(result.is_save) {\n                this.handle_upload()\n            } else {\n                this.url_preview = null\n            }\n        })\n    }   \n}\n",{"version":3,"sources":["YourBrand.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0JA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"YourBrand.vue","sourceRoot":"src/components/Pages/User/ui_user","sourcesContent":["    <template>\n        <div class=\"flex-box padding-full block-custom-header\">\n            <div class=\"block-custom col-12 padding-fix-lr box-shadow margin-fix-right\" style=\"max-height: 800px; background: #EDEDED\">\n                <div class=\"block-header bg-title-header padding-full header-fix\">\n                    <p class=\"title-form\">{{$t('user_page.your_brand')}}</p>\n                </div>\n                <form class=\"block-form\" style=\"padding: 0 8px 16px 8px;\">\n                    <div class=\"form-group row-group width-full\">\n                        <div class=\"block-list-row width-full padding-full border-bottom-ol\">\n                            <div class=\"block-item-row-header margin-fix-right\" style=\"max-width: 64px; width: 64px; justify-content: center;\">\n                                <p class=\"label text-color-second \">{{$t('user_page.logo')}}</p>\n                            </div>\n                            <div class=\"block-item-row-header\" style=\"max-width: 160px; margin: 0 8px;\">\n                                <p class=\"label text-color-second \">{{$t('form_joining.category')}}</p>\n                            </div>\n                            <div class=\"block-item-row-header\" style=\"max-width: 220px;\">\n                                <p class=\"label text-color-second \">{{$t('user_page.brand_name')}}</p>\n                            </div>\n                            <div class=\"block-item-row-header\" style=\"max-width: 200px;\">\n                                <p class=\"label text-color-second \">{{$t('user_page.pricing')}}</p>\n                            </div>\n                            <div class=\"block-item-row-header\">\n                                <p class=\"label text-color-second \">{{$t('form_joining.location')}}</p>\n                            </div>\n                            <div class=\"block-item-row-header\" style=\"width: 200px; flex: none;\">\n                                <p class=\"label text-color-second\" style=\"text-align:left;\">{{$t('action')}}</p>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group padding-full flex-row-center\" v-if=\"brands.length == 0\">\n                       <span class=\"label-cell\">{{$t('nodata')}}</span>\n                    </div>\n                    <div class=\"form-group border-bottom-ol padding-full row-animation\" style=\"align-items: center;\" v-for=\"(item,index) in brands\" :key=\"index\">\n                        <div class=\"block-item-row logo-brand margin-fix-right\" style=\"width: 64px; border: none;\">\n                            <img v-bind:src=\"`./${item.image_source.logo}`\" v-bind:alt=\"`${item.name}`\" >\n                        </div>\n                        <div class=\"block-item-row \" style=\"max-width: 160px; margin: 0 8px;\">\n                            <p class=\"label-cell\">{{handle_translate(item.id_category)}}</p>\n                        </div>\n                        <div class=\"block-item-row \" style=\"max-width: 220px;\">\n                            <a class=\"label-cell width-full\" style=\"font-size: 16px;\" v-bind:href=\"`/#/brand/${item.id}`\">{{item.name}}</a>\n                        </div>\n                        <div class=\"block-item-row \" style=\"max-width: 200px;\">\n                            <p class=\"label-cell bold\">{{item.price.toLocaleString() }} <sup>đ</sup></p>\n                        </div>\n                        <div class=\"block-item-row \" style=\"max-width: 360px; margin-right: 8px;\">\n                            <p class=\"label-cell text-overflow\" >{{item.location.toString()}}</p>\n                        </div>\n                        <div class=\"block-item-row\" style=\"justify-content: flex-end; align-items: flex-end; flex-direction: row; width: 200px; flex: none;\">\n                            <a class=\"label-cell flex-box\" v-on:click=\"handle_edit(item)\"><i class=\"fas fa-edit\"></i></a>\n                            <a  class=\"label-cell flex-box\" v-on:click=\"handle_update_image(item)\"><i class=\"far fa-file-image\"></i></a>\n                            <a class=\"label-cell flex-box\" v-on:click=\"handle_delete_brand(item)\"><i class=\"fas fa-trash-alt\"></i></a>\n                        </div>\n                    </div>\n                </form>\n            </div>\n            <detail_brand></detail_brand>\n            <div class=\"block-model\" style=\"background: rgba(0,0,0,.5)\" v-if=\"brand_selected\">\n                <div class=\"block-alert padding-full\" style=\"padding: 0 16px;\">\n                    <div class=\"block-header bg-title-header padding-full header-fix width-full\">\n                        <p class=\"title-form\"> {{brand_selected.name}}</p>\n                    </div>\n                    <form class=\"block-form\" style=\"padding:16px; width: 90%;\" @submit.prevent=\"handle_upload\">\n                        <div class=\"form-group row-group\">\n                            <div class=\"form-group row-group\" style=\"justify-content: flex-start; align-items: center\">\n                                <input type=\"radio\" name=\"logo\" v-model=\"is_logo\" value=\"LOGO\" @change=\"handle_change()\">\n                                <span class=\"label-span\">Logo</span>\n                            </div>\n                            <div class=\"form-group row-group\" style=\"justify-content: flex-start; align-items: center\">\n                                <input type=\"radio\" name=\"thumbnail\" v-model=\"is_logo\" value=\"THUMBNAIL\" @change=\"handle_change()\">\n                                <span class=\"label-span\">{{$t('image_upload.thumbnail')}}</span>\n                            </div>\n                            <div class=\"form-group row-group\" style=\"justify-content: flex-start; align-items: center\" >\n                                <input type=\"radio\" name=\"main_banner\" v-model=\"is_logo\" value=\"MAIN_BANNER\" @change=\"handle_change()\">\n                                <span class=\"label-span\">{{$t('image_upload.banner')}}</span>\n                            </div>\n                            <div class=\"form-group row-group\" style=\"justify-content: flex-start; align-items: center\">\n                                <input type=\"radio\" name=\"image_intro\" v-model=\"is_logo\" value=\"IMAGE_INTRO\" @change=\"handle_change()\">\n                                <span class=\"label-span\">{{$t('image_upload.intro')}}</span>\n                            </div>\n                            <div class=\"form-group row-group\" style=\"justify-content: flex-start; align-items: center\">\n                                <input type=\"radio\" name=\"image_intro\" v-model=\"is_logo\" value=\"MENU\" @change=\"handle_change()\">\n                                <span class=\"label-span\">{{$t('image_upload.menu')}}</span>\n                            </div>\n                            <div class=\"form-group row-group\" style=\"justify-content: flex-start; align-items: center\">\n                                <input type=\"radio\" name=\"qr_code_image\" v-model=\"is_logo\" value=\"QR_CODE\" @change=\"handle_change()\">\n                                <span class=\"label-span\">QR Code</span>\n                            </div>\n                        </div>\n                        <div class=\"form-group row-group\" v-if=\"url_preview\">\n                            <div class=\"form-group margin-bottom margin-fix-right\" style=\"max-height: 200px\" v-for=\"(image, index) in url_preview\" :key=\"index\" >\n                                <span class=\"label-span\" v-on:click=\"handle_delete_link(index)\"><i class=\"fas fa-times-circle\"></i></span>\n                                <img v-bind:src=\"image\" style=\"width: 100%; height: auto; object-fit: contain;\">\n                            </div>\n                        </div>\n                        <div class=\"form-group row-group\">\n                            <div class=\"form-group col-group margin-fix-right\" v-if=\"is_logo == 'LOGO'\">\n                                <span class=\"label-span margin-bottom\">{{$t('user_page.logo')}}</span>\n                                <span class=\"label-span text-color-second\">{{$t('image_upload.size_up_load')}} 270px - 270px</span>\n                                <span class=\"label-span margin-bottom\">* {{$t('image_upload.note_upload')}}</span>\n                                <input type=\"file\" v-validate=\"`required:true`\" name=\"logo\" ref=\"logo\" v-on:change=\"handleFileUpload\" accept=\"image/*\">\n                                <span class=\"error-text margin-fix-top\" v-show=\"errors.has('logo')\">{{errors.first('logo')}}</span>\n                            </div>\n                            <div class=\"form-group col-group\" v-if=\"is_logo == 'THUMBNAIL'\">\n                                <span class=\"label-span margin-bottom\">COVER</span>\n                                <span class=\"label-span text-color-second\">Size Image Upload: 870px - 270px</span>\n                                <span class=\"label-span margin-bottom\">* {{$t('image_upload.note_upload')}}</span>\n                                <input type=\"file\" v-validate=\"`required:true`\" name=\"thumbnail\" ref=\"thumbnail\" v-on:change=\"handleFileUpload\" accept=\"image/*\">\n                                <span class=\"error-text margin-fix-top\" v-show=\"errors.has('thumbnail')\">{{errors.first('thumbnail')}}</span>\n                            </div>\n                        </div>\n                        <div class=\"form-group row-group\">\n                            <div class=\"form-group col-group margin-fix-right\" v-if=\"is_logo == 'MAIN_BANNER'\">\n                                <span class=\"label-span margin-bottom\">Term</span>\n                                <span class=\"label-span text-color-second\">{{$t('image_upload.size_up_load')}} 960px - 720px}</span>\n                                <span class=\"label-span margin-bottom\">* {{$t('image_upload.note_upload')}}</span>\n                                <input type=\"file\" v-validate=\"`required:true`\" name=\"main_banner\" ref=\"main_banner\" v-on:change=\"handleFileUpload\" multiple accept=\"image/*\">\n                                <span class=\"error-text margin-fix-top\" v-show=\"errors.has('main_banner')\">{{errors.first('main_banner')}}</span>\n                            </div>\n                            <div class=\"form-group col-group margin-fix-right\" v-if=\"is_logo == 'IMAGE_INTRO'\">\n                                <span class=\"label-span margin-bottom\">Brand Introduce</span>\n                                <span class=\"label-span text-color-second\">{{$t('image_upload.size_up_load')}} 960px - 720px}</span>\n                                <span class=\"label-span margin-bottom\">* {{$t('image_upload.note_upload')}}</span>\n                                <input type=\"file\" v-validate=\"`required:true`\" name=\"image_intro\" ref=\"image_intro\"  v-on:change=\"handleFileUpload\" multiple accept=\"image/*\">\n                                <span class=\"error-text margin-fix-top\" v-show=\"errors.has('image_intro')\">{{errors.first('image_intro')}}</span>\n                            </div>\n                            <div class=\"form-group col-group\" v-if=\"is_logo == 'MENU'\">\n                                <span class=\"label-span margin-bottom\">Menu</span>\n                                <span class=\"label-span text-color-second\">{{$t('image_upload.size_up_load')}} 960px - 720px}</span>\n                                <span class=\"label-span margin-bottom\">* {{$t('image_upload.note_upload')}}</span>\n                                <input type=\"file\" v-validate=\"`required:true`\" name=\"menu\" ref=\"menu\"  v-on:change=\"handleFileUpload\" multiple accept=\"image/*\">\n                                <span class=\"error-text margin-fix-top\" v-show=\"errors.has('menu')\">{{errors.first('menu')}}</span>\n                            </div>\n                        </div>\n                        <div class=\"form-group row-group\">\n                            <div class=\"form-group col-group\" v-if=\"is_logo == 'QR_CODE'\">\n                                <span class=\"label-span margin-bottom\">QR CODE</span>\n                                <span class=\"label-span text-color-second\">Size Image Upload: 90px - 90px}</span>\n                                <span class=\"label-span margin-bottom\">* {{$t('image_upload.note_upload')}}</span>\n                                <input type=\"file\" v-validate=\"`required:true`\" name=\"qr_code_image\" ref=\"qr_code_image\"  v-on:change=\"handleFileUpload\"  accept=\"image/*\">\n                                <span class=\"error-text margin-fix-top\" v-show=\"errors.has('qr_code_image')\">{{errors.first('qr_code_image')}}</span>\n                            </div>\n                        </div>\n                        <div class=\"form-group row-group\" style=\"justify-content: center; align-items: center;\">\n                            <div class=\"btn btn-cancel margin-fix-right\" style=\"color: #ED6B28; border: 1px solid #ED6B28\" v-on:click=\"handle_close_form_up()\">{{$t('cancel')}}</div>\n                            <button class=\"btn btn-signup primary-color\" style=\"color: #FFF\" >{{$t('save')}}</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </template>\n\n    <script>\n    import {HTTP} from '../../../../http-common'\n    import detail_brand from './Detail-Brand'\n    import { socket_bus } from '../../../../main'\n\n    export default {\n        components: { detail_brand,\n        },\n        data() {\n            return {\n                customer: {},\n                brands: [],\n                brand_selected: null,\n                is_add: false,\n                is_change_image: false,\n                images: '',\n                thumbnail: '',\n                main_banner: '',\n                image_intro: '',\n                menu: '',\n                logo:'',\n                is_logo: '',\n                qr_code_image: '',\n                url_preview: null,\n            }\n        },\n        methods: {\n            handle_translate(name) {\n                var result = ''\n                switch(name) {\n                    case 'Drink':\n                        result = this.$t('drink')\n                        break;\n                    case 'Dessert':\n                        result = this.$t('dessert')\n                        break;\n                    case 'Vietnamese Foods':\n                        result = this.$t('vn_food')\n                        break;\n                    case 'Foriegn Foods':\n                        result = this.$t('foriegn_fd')\n                        break;\n                    case 'BBQ':\n                        result = this.$t('bbq')\n                        break;\n                    case 'Brunch':\n                        result = this.$t('brunch')\n                        break;\n                    case 'Hot Pot':\n                        result = this.$t('hotpot')\n                        break;\n                }\n                return result;\n            },\n            handle_get_brands() {\n                this.$store.dispatch('handle_get_brands').then (result => {\n                    this.brands = result.status == 200 ? result.data : []\n                })\n            },\n            handle_change() {\n                if(this.url_preview) {\n                    socket_bus.$emit('SHOW_MESSAGE_UPLOAD_IMAGE', {message: 'You want to save image ?'})\n                }\n            },\n            handle_add_brand() {\n                this.is_add = true;\n            },\n            handle_edit(brand) {\n               socket_bus.$emit('EDIT_BRAND', {data: brand })\n               console.log('brand');\n            },\n            handle_delete_brand(brand) {\n                socket_bus.$emit('DELETE_BRAND', {data: brand })\n            },\n            handle_update_image(brand) {\n                this.brand_selected = brand\n            },\n            handle_delete_link(index) {\n                 if(this.is_logo == 'MAIN_BANNER' || this.is_logo == 'IMAGE_INTRO' || this.is_logo == 'MENU') {\n                    this.url_preview = null,\n                    this.main_banner = ''\n                    this.image_intro = ''\n                    this.$refs.logo = []\n                    this.menu = ''\n                } else {\n                    this.url_preview = null,\n                    this.logo = ''\n                    this.qr_code_image = ''\n                    this.thumbnail = ''\n                    this.$refs.logo = []\n                }\n            },\n            handleFileUpload(e) {\n                this.url_preview = []\n                var files = e.target.files || e.dataTransfer.files;\n                var _URL = window.URL || window.webkitURL;\n                 var image = new Image()\n                if (!files.length)\n                    return;\n                this.qr_code_image = files[0]\n                this.logo = files[0],\n                this.images = files[0];\n                this.thumbnail = files[0]\n                this.main_banner = files\n                this.image_intro = files\n                this.menu = files\n\n                if(this.main_banner.length > 2) {\n                    socket_bus.$emit('SHOW_MESSAGE', {message: 'Main Banner Only 2 Picture'})\n                    this.main_banner = []\n                    e.target.value = ''\n                } else if(this.image_intro.length > 5) {\n                    socket_bus.$emit('SHOW_MESSAGE', {message: 'Image Intro Only 5 Picture'})\n                    this.image_intro = []\n                    e.target.value = ''\n                } else if(this.menu.length > 5) {\n                    socket_bus.$emit('SHOW_MESSAGE', {message: 'Menu Only 5 Picture'})\n                    this.menu = []\n                    e.target.value = ''\n                }\n\n                switch(this.is_logo) {\n                    case 'LOGO':\n                        image.src = _URL.createObjectURL(files[0]);\n                        image.onload = () => {\n                            if(image.width != 270 || image.height != 270 ) {\n                                socket_bus.$emit('SHOW_MESSAGE', {message: 'Size image upload is over rules'})\n                                this.logo = null\n                                e.target.value = ''\n                            } else {\n                                this.url_preview.push(URL.createObjectURL(files[0]));\n                            }\n                        }\n                        break;\n                    case 'THUMBNAIL':\n                        image.src = _URL.createObjectURL(files[0]);\n                        image.onload = () => {\n                            if(image.width != 870 || image.height != 270 ) {\n                                socket_bus.$emit('SHOW_MESSAGE', {message: 'Size image upload is over rules'})\n                                this.thumbnail = null\n                                e.target.value = ''\n                            } else {\n                                this.url_preview.push(URL.createObjectURL(files[0]));\n                            }\n                        }\n                        break;\n                    case 'MAIN_BANNER':\n                        for(var i = 0; i < files.length; i++) {\n                            image.src = _URL.createObjectURL(files[i]);\n                            image.onload = () => {\n                                if(image.width != 960 || image.height != 720 ) {\n                                    socket_bus.$emit('SHOW_MESSAGE', {message: 'Size image upload is over rules'})\n                                    this.main_banner = null\n                                    e.target.value = ''\n                                    this.url_preview = null\n                                } else {\n                                    for(i = 0; i < files.length; i++) {\n                                        this.url_preview.push(URL.createObjectURL(files[i]));\n                                    }\n                                }\n                            }\n                        }\n                        break;\n                    case 'IMAGE_INTRO':\n                        for(i = 0; i < files.length; i++) {\n                            image.src = _URL.createObjectURL(files[i]);\n                            image.onload = () => {\n                                if(image.width != 960 || image.height != 720 ) {\n                                    socket_bus.$emit('SHOW_MESSAGE', {message: 'Size image upload is over rules'})\n                                    this.image_intro = null\n                                    e.target.value = ''\n                                    this.url_preview = null\n                                } else {\n                                   for(i = 0; i < files.length; i++) {\n                                        this.url_preview.push(URL.createObjectURL(files[i]));\n                                    }\n                                }\n                            }\n                        }\n                        break;\n                    case 'MENU':\n                        for(i = 0; i < files.length; i++) {\n                            image.src = _URL.createObjectURL(files[i]);\n                            image.onload = () => {\n                                if(image.width != 960 || image.height != 720 ) {\n                                    socket_bus.$emit('SHOW_MESSAGE', {message: 'Size image upload is over rules'})\n                                    this.image_intro = null\n                                    e.target.value = ''\n                                    this.url_preview = null\n                                } else {\n                                   for(i = 0; i < files.length; i++) {\n                                        this.url_preview.push(URL.createObjectURL(files[i]));\n                                    }\n                                }\n                            }\n                        }\n                        break;\n                    case 'QR_CODE':\n                        image.src = _URL.createObjectURL(files[0]);\n                        image.onload = () => {\n                            if(image.width != 90 || image.height != 90 ) {\n                                socket_bus.$emit('SHOW_MESSAGE', {message: 'Size image upload is over rules'})\n                                this.logo = null\n                                e.target.value = ''\n                            } else {\n                                this.url_preview.push(URL.createObjectURL(files[0]));\n                            }\n                        }\n                        break;\n                }\n                \n            },\n            handle_upload() {\n                switch(this.is_logo) {\n                    case 'LOGO':\n                        this.handle_up_logo();\n                        break;\n                    case 'THUMBNAIL':\n                        this.handle_up_thumbnail();\n                        break;\n                    case 'MAIN_BANNER':\n                        this.handle_up_main_banner();\n                        break;\n                    case 'IMAGE_INTRO':\n                        this.handle_up_image_intro();\n                        break;\n                    case 'MENU':\n                        this.handle_up_menu();\n                        break;\n                    case 'QR_CODE':\n                        this.handle_up_qr_code_image();\n                        break;\n                }\n            },\n            handle_up_logo() {\n                const data_form = new FormData()\n                data_form.append('name', this.brand_selected.id)\n                data_form.append('logo', this.logo);\n\n                return new Promise((resolve, reject) => {\n                    HTTP.post('/brands/upload-logo/' + this.brand_selected.id, data_form, {\n                        headers: {\n                            'Content-Type' : 'multipart/form-data'\n                        }\n                    }).then(result => {\n                        resolve(result)\n                        if(result.data.status == 200) {\n                            setTimeout(() => {window.location.reload()}, 3000) \n                            socket_bus.$emit('SHOW_MESSAGE',{message: 'Update Image Success !!!'})\n                        } else {\n                            socket_bus.$emit('SHOW_MESSAGE',{message: 'Update Image Fail !!!'})\n                        }\n                    }).catch(error => {\n                        reject(error)\n                        console.log('Error: ' + error);\n                    })\n                })\n            },\n            handle_up_thumbnail() {\n                const data_form = new FormData();\n                data_form.append(\"name\", this.brand_selected.id)\n                data_form.append(\"thumbnail\", this.thumbnail)\n                \n                return new Promise((resolve, reject) => {\n                    HTTP.post('/brands/upload-thumbnail/' + this.brand_selected.id, data_form, {\n                        headers: {\n                            'Content-Type' : 'multipart/form-data'\n                        }\n                    }).then(result => {\n                        resolve(result)\n                        if(result.data.status == 200) {\n                            window.location.reload()\n                            alert('Update Image Success !!!')\n                        } else {\n                            alert('Update Image Fail !!!')\n                        }\n                    }).catch(error => {\n                        reject(error)\n                        console.log('Error: ' + error);\n                    })\n                })\n            },\n            handle_up_qr_code_image() {\n                const data_form = new FormData();\n                data_form.append(\"name\", this.brand_selected.id)\n                data_form.append(\"qr_code_image\", this.thumbnail)\n                \n                return new Promise((resolve, reject) => {\n                    HTTP.post('/brands/upload-qr-code/' + this.brand_selected.id, data_form, {\n                        headers: {\n                            'Content-Type' : 'multipart/form-data'\n                        }\n                    }).then(result => {\n                        resolve(result)\n                        if(result.data.status == 200) {\n                            window.location.reload()\n                            alert('Update Qr Code Success !!!')\n                        } else {\n                            alert('Update Qr Code Fail !!!')\n                        }\n                    }).catch(error => {\n                        reject(error)\n                        console.log('Error: ' + error);\n                    })\n                })\n            },\n            handle_up_main_banner() {\n                const data_form = new FormData();\n                data_form.append(\"name\", this.brand_selected.id)\n                for(let i = 0; i < this.main_banner.length; i++) {\n                    data_form.append('main_banner', this.main_banner[i])\n                }\n\n                return new Promise((resolve, reject) => {\n                    HTTP.post('/brands/upload-banners/' + this.brand_selected.id, data_form, {\n                        headers: {\n                             'Content-Type' : 'multipart/form-data'\n                        }\n                    }).then(result => {\n                        resolve(result)\n                        if(result.data.status == 200) {\n                            window.location.reload()\n                            alert('Update Image Success !!!')\n                        } else {\n                            alert('Update Image Fail !!!')\n                        }\n                    }).catch(error => {\n                        reject(error)\n                        console.log('Error: ' + error);\n                    })\n                })\n            },\n            handle_up_image_intro() {\n                const data_form = new FormData();\n                data_form.append(\"name\", this.brand_selected.id)\n                for(let i = 0; i < this.image_intro.length; i++) {\n                    data_form.append('image_intro', this.image_intro[i])\n                }\n\n                return new Promise((resolve, reject) => {\n                    HTTP.post('/brands/upload-intro-image/' + this.brand_selected.id, data_form, {\n                        headers: {\n                             'Content-Type' : 'multipart/form-data'\n                        }\n                    }).then(result => {\n                        resolve(result)\n                        if(result.data.status == 200) {\n                            window.location.reload()\n                            alert('Update Image Success !!!')\n                        } else {\n                            alert('Update Image Fail !!!')\n                        }\n                    }).catch(error => {\n                        reject(error)\n                        console.log('Error: ' + error);\n                    })\n                })\n            },\n            handle_up_menu() {\n                const data_form = new FormData();\n                data_form.append(\"name\", this.brand_selected.id)\n                for(let i = 0; i < this.menu.length; i++) {\n                    data_form.append('menu', this.menu[i])\n                }\n\n                return new Promise((resolve, reject) => {\n                    HTTP.post('/brands/upload-menu/' + this.brand_selected.id, data_form, {\n                        headers: {\n                            'Content-Type' : 'multipart/form-data'\n                        }\n                    }).then(result => {\n                        resolve(result)\n                        if(result.data.status == 200) {\n                           this.brand_selected = null\n                           socket_bus.$emit('SHOW_MESSAGE',{message: 'Update Image Success !!!'})\n                            setTimeout(() => {window.location.reload()}, 3000) \n                            \n                        } else {\n                            socket_bus.$emit('SHOW_MESSAGE',{message: 'Update Image Fail !!!'})\n                        }\n                    }).catch(error => {\n                        reject(error)\n                        console.log('Error: ' + error);\n                    })\n                })\n            },\n            handle_close_form_up() {\n                this.is_logo = null\n                this.brand_selected = null\n                this.logo = null\n                this.main_banner = null\n                this.image_intro = null\n                this.thumbnail = null\n                this.url_preview = null\n            }\n        },\n        created() {\n            this.handle_get_brands()\n\n            socket_bus.$on('CANCEL_ADD_BRAND', result => {\n                this.is_add = result.state\n            })\n\n            socket_bus.$on(\"UPDATE_LIST_BRAND\", result => {\n                this.brands.push(result.data)\n            })\n\n            socket_bus.$on('RESPONSE_DELETE', result => {\n                if(result.is_delete) {\n                    this.brands.splice(this.brands.indexOf(result.data), 1)\n                    HTTP.delete('/brands/' + result.data.id).then(result => {\n                        if(result.data.status == 200) {\n                            socket_bus.$emit('SHOW_MESSAGE',{message: 'Delete Brand Success !!!'})\n                        } else {\n                            socket_bus.$emit('SHOW_MESSAGE',{message: 'Delete Brand Fail !!!'})\n                        }\n                    })\n                    .catch(error => {\n                        console.log('Error Delete: ' + error);\n                    })\n                }\n            })\n\n            socket_bus.$on('CLOSE_BOX', result => {\n                this.handle_get_brands()\n            })\n\n            socket_bus.$on('RESULT_UPLOAD_IMAGE', result => {\n                if(result.is_save) {\n                    this.handle_upload()\n                } else {\n                    this.url_preview = null\n                }\n            })\n        }   \n    }\n    </script>"]}]}