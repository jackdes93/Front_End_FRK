{"remainingRequest":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/src/components/Pages/Admin/Pages/FormAddAccount.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/src/components/Pages/Admin/Pages/FormAddAccount.vue","mtime":1578246406000},{"path":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {socket_bus } from '../../../../main'\nimport { HTTP_ADMIN } from '../../../../http-common';\n\nexport default {\n    data() {\n        return {\n            account: {full_name: '', user_name: '', roles: '', password: ''},\n            roles: ['MODERATOR', 'MONITOR']\n        }\n    },\n    methods : {\n        handle_translate_role(role) {\n            switch(role) {\n                case 'MODERATOR':\n                    return this.$t('manager.role_mod')\n                case 'MONITOR':\n                    return this.$t('manager.role_monit')\n            }\n        },\n        handle_add_account() {\n            this.$validator.validateAll()\n            if(!this.errors.any()) {\n                HTTP_ADMIN.post('admin', this.account).then(result => {\n                    if(result.data.status == 201) {\n                        this.account = {full_name: '', user_name: '', roles: '', password: ''}\n                        socket_bus.$emit('ADD_ACCOUNT_SUCCESS', {data: result.data.data})\n                        socket_bus.$emit('SHOW_ALERT', {is_show: true, message: this.$t('message_alert.register_account_success'), is_redirect: true})\n                        setTimeout(() => {this.handle_close_form()}, 5000) \n                    } else {\n                        socket_bus.$emit('SHOW_ALERT', {is_show: true, message: this.$t('message_alert.register_account_fail'), is_redirect: true})\n                    }\n                })\n            }\n        },\n        handle_close_form() {\n            socket_bus.$emit('CLOSE_FORM_ADD', {data: false})\n        }\n    }\n}\n",{"version":3,"sources":["FormAddAccount.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"FormAddAccount.vue","sourceRoot":"src/components/Pages/Admin/Pages","sourcesContent":["<template>\n    <div class=\"block-model\" style=\"background: rgba(0,0,0,.5)\">\n        <div class=\"block-alert padding-full\">\n            <div class=\"block-header bg-title-header padding-full header-fix width-full\">\n                <p class=\"title-form\">{{$t('manager.add_account_manager')}}</p>\n            </div>\n            <form class=\"block-form\" @submit.prevent=\"handle_add_account\" style=\"width: 80%;\">\n                <div class=\"form-group col-group\">\n                    <span class=\"label-span margin-bottom\">{{$t('name')}}</span>\n                    <input type=\"text\" class=\"border-bottom-ol margin-bottom\" name=\"full_name\" v-model=\"account.full_name\" v-validate=\"'required: true'\">\n                    <span class=\"error-text margin-fix-top\" v-show=\"errors.has('full_name')\">{{errors.first('full_name')}}</span>\n                </div>\n                <div class=\"form-group col-group\">\n                    <span class=\"label-span margin-bottom\">Email </span>\n                    <input type=\"text\" class=\"border-bottom-ol margin-bottom\" name=\"user_name\" v-model=\"account.user_name\" v-validate=\"'required: true|email'\">\n                    <span class=\"error-text margin-fix-top\" v-show=\"errors.has('user_name')\">{{errors.first('user_name')}}</span>\n                </div>\n                <div class=\"form-group margin-bottom col-group\">\n                    <span class=\"label-span margin-bottom\">{{$t('form_login.password')}}</span>\n                    <div class=\"form-group \">\n                        <input type=\"password\" :placeholder=\"`${$t('form_login.password')}`\" name=\"password\" v-model=\"account.password\" v-validate=\"'required:true|min:9'\" ref=\"password\">\n                    </div>\n                    <span class=\"error-text margin-fix-top\" v-show=\"errors.has('password')\">{{errors.first('password')}}</span>\n                </div>\n                <div class=\"form-group margin-bottom col-group\">\n                    <span class=\"label-span margin-bottom\">{{$t('form_login.re_password')}}</span>\n                    <div class=\"form-group \">\n                        <input type=\"password\" :placeholder=\"`${$t('form_login.re_password')}`\" name=\"re_password\" v-validate=\"'required:true|confirmed:password'\">\n                    </div>\n                    <span class=\"error-text margin-fix-top\" v-show=\"errors.has('re_password')\">{{errors.first('re_password')}}</span>\n                </div>\n                <div class=\"form-group col-group\" v-show=\"account.roles != 'ADMIN'\">\n                    <span class=\"label-span margin-bottom\">{{$t('manager.role')}}</span>\n                    <select name=\"category\"  class=\"list-joining\" v-model=\"account.roles\" v-validate=\"'required: true'\">\n                        <option value=\"\" selected>-- {{$t('manager.select_roles')}} --</option>\n                        <option v-bind:value=\"item\" v-for=\"(item, index) in roles\" :key=\"index\">{{handle_translate_role(item)}}</option>\n                    </select>\n                </div>\n                <div class=\"form-group row-group\" style=\"justify-content: center;\">\n                    <button class=\"btn btn-cancel margin-fix-right\" style=\"color: #ED6B28; border: 1px solid #ED6B28\" v-on:click=\"handle_close_form\">{{$t('cancel')}}</button>\n                    <button class=\"btn btn-signup primary-color\" style=\"color: #FFF\">{{$t('save')}}</button>\n                </div>\n            </form>\n        </div>\n    </div>\n</template>\n\n<script>\nimport {socket_bus } from '../../../../main'\nimport { HTTP_ADMIN } from '../../../../http-common';\n\nexport default {\n    data() {\n        return {\n            account: {full_name: '', user_name: '', roles: '', password: ''},\n            roles: ['MODERATOR', 'MONITOR']\n        }\n    },\n    methods : {\n        handle_translate_role(role) {\n            switch(role) {\n                case 'MODERATOR':\n                    return this.$t('manager.role_mod')\n                case 'MONITOR':\n                    return this.$t('manager.role_monit')\n            }\n        },\n        handle_add_account() {\n            this.$validator.validateAll()\n            if(!this.errors.any()) {\n                HTTP_ADMIN.post('admin', this.account).then(result => {\n                    if(result.data.status == 201) {\n                        this.account = {full_name: '', user_name: '', roles: '', password: ''}\n                        socket_bus.$emit('ADD_ACCOUNT_SUCCESS', {data: result.data.data})\n                        socket_bus.$emit('SHOW_ALERT', {is_show: true, message: this.$t('message_alert.register_account_success'), is_redirect: true})\n                        setTimeout(() => {this.handle_close_form()}, 5000) \n                    } else {\n                        socket_bus.$emit('SHOW_ALERT', {is_show: true, message: this.$t('message_alert.register_account_fail'), is_redirect: true})\n                    }\n                })\n            }\n        },\n        handle_close_form() {\n            socket_bus.$emit('CLOSE_FORM_ADD', {data: false})\n        }\n    }\n}\n</script>"]}]}