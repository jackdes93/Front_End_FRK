{"remainingRequest":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/src/components/Pages/User/ui_user/CreateNewAdvertisement.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/src/components/Pages/User/ui_user/CreateNewAdvertisement.vue","mtime":1570342935951},{"path":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { socket_bus } from '../../../../main'\nimport datepicker from 'vuejs-datepicker';\nimport Calendar from 'vue-datepicker-ui'\nimport { HTTP } from '../../../../http-common';\nexport default {\n    components: {datepicker, Calendar},\n    data() {\n        return {\n            example: {title: 'Range',\n                inputClass: 'exampleDatePicker',\n                lang: 'en',\n                position: 'bottom',\n                range: true,\n                value: [new Date(), new Date(new Date().getTime() + ( 9 * 24 * 60 * 60 * 1000))],\n                firstDayOfWeek: 'monday',\n                dateFormat: {\n                    day: \"2-digit\",\n                    month: \"2-digit\",\n                    year: \"numeric\"\n                }\n            },\n            new_adv: {id_brand: '', price: 0, adversiting_time: 0, start_time: Date.now(), page: ''},\n            format: 'dd/MM/yyyy',\n            brands: [],\n            adver_type:[],\n            pages: [],\n            options: [],\n            option: {},\n            times:[{name: '3 days', value: 3}, {name: '1 weeks', value: 7}, {name:'2 weeks', value: 14}, {name:'1 months', value: 30}, {name:'2 months', value: 60}, {name: '3 months', value: 90}, {name: '4 months', value: 120}],\n            brand_selected: null,\n            selected_advertising_type: null,\n            selected_page: null,\n            is_hotlabel: false,\n            banner: '',\n            final_price: 0,\n            is_add: false\n        }\n    },\n    methods : {\n        handle_close() {\n            this.is_add = false;\n            // socket_bus.$emit('CLOSE_FORM_ADD', {data: false})\n        },\n        handleFileUpload(e) {\n            var files = e.target.files || e.dataTransfer.files;\n            if (!files.length)\n                return;\n            this.banner = this.$refs.banner.files[0]\n        },\n        handle_choose_type() {\n            this.new_adv.advertising_type = this.selected_advertising_type.name    \n            switch(this.selected_advertising_type.name) {\n                case 'BANNER':\n                    this.pages = ['All Page Exclude Brand & Exhibition', 'Home', 'Category', 'Exhibition']\n                    break;\n                case 'SUGESTION':\n                    this.pages = ['Home', 'Category']\n                    break;\n                case 'HOTLABEL':\n                    this.is_hotlabel = true\n                    this.final_price = this.selected_advertising_type.price\n                    this.handle_cal_price()\n                    break\n            }\n        },\n        handle_choose_page() {\n            this.options = this.selected_advertising_type.option.filter(item => item.page == this.selected_page)\n            this.final_price = this.selected_advertising_type.price\n            this.options.map(item => {\n                return item.bonus == 0 ? this.option = item : null;\n            })\n        },\n        handle_check() {\n            this.final_price = this.selected_advertising_type.price + this.option.bonus\n            this.handle_cal_price()\n        },\n        handle_cal_price() {\n            this.new_adv.price = this.final_price * this.new_adv.adversiting_time\n            this.example.value[1] = new Date(this.new_adv.start_time + (this.new_adv.adversiting_time * 24 * 60 * 60 * 1000))\n            console.log(this.example.value)\n        },\n        handle_create_advertisement() {\n            this.start_time = this.example.value[0]\n            this.stop_time = \n            this.new_adv.note = this.option.position\n            this.new_adv.page = this.selected_page\n            // this.$validator.validateAll()\n            // if(!this.errors.any()) {\n            //     return new Promise((resolve, reject) => {\n            //         HTTP.post('/advertisements/', this.new_adv).then(result => {\n            //             if(result.data.status == 201) {\n            //                 alert('Create New Advertisement Success')\n            //                 socket_bus.$emit('CLOSE_ADD_ADV', {data: result.data.data})\n            //             } else {\n            //                 alert('Create New Advertisement Fail')\n            //             }\n            //         }).catch(error => {\n            //             reject(error)\n            //             console.log('Error: ' + error);\n            //         })\n            //     })\n            // }\n            console.log(this.new_adv)\n        },\n        handle_get_brands() {\n            const customer = JSON.parse(localStorage.getItem('customer'))\n            return new Promise((resolve, reject) => {\n                HTTP.get('/brands/brand-customer/' + customer.id).then(result => {\n                    resolve(result.data)\n                    this.brands = result.data.status == 200 ? result.data.data : []\n                }).catch(error => {\n                    reject(error)\n                })\n            })\n        },\n    },\n    created() {\n        socket_bus.$on('ADV', (brand_choose) => {\n            this.is_add = true\n            this.new_adv.id_brand = brand_choose.id_brand\n        })\n        this.handle_get_brands()\n        this.$store.dispatch('get_advertisement_type').then(result => {\n            this.adver_type = result.status == 200 ? result.data : []\n        })  \n\n    }\n}\n",{"version":3,"sources":["CreateNewAdvertisement.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"CreateNewAdvertisement.vue","sourceRoot":"src/components/Pages/User/ui_user","sourcesContent":["<template>\n    <div class=\"block-model\" style=\"background: rgba(0,0,0,.5)\" v-if=\"is_add\">\n        <div class=\"block-alert padding-full\">\n            <div class=\"block-header bg-title-header padding-full header-fix width-full\">\n                <p class=\"title-form\">Advertisement For Brand</p>\n            </div>\n            <form class=\"block-form\" style=\"padding: 8px 16px!important; width: 85%;\" @submit.prevent=\"handle_create_advertisement\">\n                <div class=\"form-group row-group\">\n                    <div class=\"form-group col-group margin-fix-right\">\n                        <span class=\"label-span margin-bottom\">Brand</span>\n                        <select name=\"category\"  class=\"list-joining\" v-model=\"new_adv.id_brand\">\n                            <option value=\"\" selected>-- Select Brand --</option>\n                            <option v-bind:value=\"item.id\" v-for=\"(item, index) in brands\" :key=\"index\">{{item.name}}</option>\n                        </select>\n                    </div>\n                    <div class=\"form-group col-group margin-fix-right\">\n                        <span class=\"label-span margin-bottom\">Advertisement Type (1)</span>\n                        <select name=\"category\"  class=\"list-joining\" v-model=\"selected_advertising_type\" true-value=\"item\" false-value=\"null\" @change=\"handle_choose_type\">\n                            <option value=null selected>-- Select Advertisement Type --</option>\n                            <option v-bind:value=\"item\" v-for=\"(item, index) in adver_type\" :key=\"index\">{{item.name}}</option>\n                        </select>\n                    </div>\n                    <div class=\"form-group col-group\" v-if=\"!is_hotlabel\" >\n                        <span class=\"label-span margin-bottom\">Page</span>\n                        <select name=\"page\"  class=\"list-joining\" v-model=\"selected_page\" true-value=\"item\" false-value=\"null\" :disabled=\"selected_advertising_type == null\" @change=\"handle_choose_page\">\n                            <option value=null selected>-- Select Page --</option>\n                            <option v-bind:value=\"item\" v-for=\"(item, index) in pages\" :key=\"index\">{{item}}</option>\n                        </select>\n                    </div>\n                </div>\n                <div class=\"form-group col-group\" v-if=\"options.length != 0\">\n                    <span class=\"label-span\">Options: (2)</span>\n                    <div class=\"form-group col-group padding-full\" style=\"max-height: 200px; overflow: scroll;\">\n                        <div class=\"form-group col-group\" v-for=\"(item, index) in options\" :key=\"index\">\n                            <div class=\"form-group row-group\">\n                                <input style=\"width: 40px;\" type=\"radio\" name=\"option\" v-model=\"option\" :value=\"item\" @change=\"handle_check\">\n                                <span class=\"label-span margin-fix-right text-overflow\">{{item.position}}</span>\n                                <p class=\"label-span\" style=\"width: 120px;\"> + {{item.bonus.toLocaleString()}} <sup>đ</sup> </p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"form-group row-group\">\n                    <div class=\"form-group col-group margin-fix-right\">\n                        <span class=\"label-span margin-bottom\">Advertisement Time (3)</span>\n                        <select name=\"category\"  class=\"list-joining\" v-model=\"new_adv.adversiting_time\" @change=\"handle_cal_price\">\n                            <option value=\"0\" selected>-- Select Time  --</option>\n                            <option v-bind:value=\"item.value\" v-for=\"(item, index) in times\" :key=\"index\">{{item.name}}</option>\n                        </select>\n                    </div>\n                    <div class=\"form-group col-group margin-fix-right \">\n                        <span class=\"label-span margin-bottom\">Start Date</span>\n                        <Calendar\n                            v-model=\"example.value\"\n                            :range=\"example.range\"\n                            :lang=\"example.lang\"\n                            :firstDayOfWeek=\"example.firstDayOfWeek\"\n                            :input-class=\"example.inputClass\"\n                            :position=\"example.position\"\n                            :disabled-start-date=\"example.disabledStartDate\"\n                            :text-format=\"example.textFormat\"\n                            :date-format=\"example.dateFormat\"\n                            :disabled-end-date=\"example.disabledEndDate\"/>\n                        <!-- <datepicker placeholder=\"Choose Date Start\" class=\"date_picker\" :format=\"format\" v-model=\"new_adv.start_time\"></datepicker> -->\n                    </div>\n                </div>\n                <div class=\"form-group row-group\">\n                    <div class=\"form-group col-group margin-fix-right\">\n                        <span class=\"label-span margin-bottom\">Price [ 1 + 2 ] * 3 </span>\n                        <p class=\"label\" style=\"color: #f34343\">{{new_adv.price.toLocaleString()}} <sup>đ</sup> </p>\n                    </div>\n                </div>\n                <div class=\"form-group row-group\" style=\"justify-content: center;\">\n                    <button class=\"btn btn-cancel margin-fix-right\" style=\"color: #ED6B28; border: 1px solid #ED6B28\" v-on:click=\"handle_close()\">CANCEL</button>\n                    <button class=\"btn btn-signup primary-color\" style=\"color: #FFF\">CREATE</button>\n                </div>\n            </form>\n        </div>\n    </div>\n</template>\n<style>\n.date_picker { display: flex; flex-direction: column; justify-content: flex-end; width: 100%; height: 36px !important;}\n.date_picker input { height: 38px;}\n.date_picker > .header { height: 20px !important;}\n</style>\n<script>\nimport { socket_bus } from '../../../../main'\nimport datepicker from 'vuejs-datepicker';\nimport Calendar from 'vue-datepicker-ui'\nimport { HTTP } from '../../../../http-common';\nexport default {\n    components: {datepicker, Calendar},\n    data() {\n        return {\n            example: {title: 'Range',\n                inputClass: 'exampleDatePicker',\n                lang: 'en',\n                position: 'bottom',\n                range: true,\n                value: [new Date(), new Date(new Date().getTime() + ( 9 * 24 * 60 * 60 * 1000))],\n                firstDayOfWeek: 'monday',\n                dateFormat: {\n                    day: \"2-digit\",\n                    month: \"2-digit\",\n                    year: \"numeric\"\n                }\n            },\n            new_adv: {id_brand: '', price: 0, adversiting_time: 0, start_time: Date.now(), page: ''},\n            format: 'dd/MM/yyyy',\n            brands: [],\n            adver_type:[],\n            pages: [],\n            options: [],\n            option: {},\n            times:[{name: '3 days', value: 3}, {name: '1 weeks', value: 7}, {name:'2 weeks', value: 14}, {name:'1 months', value: 30}, {name:'2 months', value: 60}, {name: '3 months', value: 90}, {name: '4 months', value: 120}],\n            brand_selected: null,\n            selected_advertising_type: null,\n            selected_page: null,\n            is_hotlabel: false,\n            banner: '',\n            final_price: 0,\n            is_add: false\n        }\n    },\n    methods : {\n        handle_close() {\n            this.is_add = false;\n            // socket_bus.$emit('CLOSE_FORM_ADD', {data: false})\n        },\n        handleFileUpload(e) {\n            var files = e.target.files || e.dataTransfer.files;\n            if (!files.length)\n                return;\n            this.banner = this.$refs.banner.files[0]\n        },\n        handle_choose_type() {\n            this.new_adv.advertising_type = this.selected_advertising_type.name    \n            switch(this.selected_advertising_type.name) {\n                case 'BANNER':\n                    this.pages = ['All Page Exclude Brand & Exhibition', 'Home', 'Category', 'Exhibition']\n                    break;\n                case 'SUGESTION':\n                    this.pages = ['Home', 'Category']\n                    break;\n                case 'HOTLABEL':\n                    this.is_hotlabel = true\n                    this.final_price = this.selected_advertising_type.price\n                    this.handle_cal_price()\n                    break\n            }\n        },\n        handle_choose_page() {\n            this.options = this.selected_advertising_type.option.filter(item => item.page == this.selected_page)\n            this.final_price = this.selected_advertising_type.price\n            this.options.map(item => {\n                return item.bonus == 0 ? this.option = item : null;\n            })\n        },\n        handle_check() {\n            this.final_price = this.selected_advertising_type.price + this.option.bonus\n            this.handle_cal_price()\n        },\n        handle_cal_price() {\n            this.new_adv.price = this.final_price * this.new_adv.adversiting_time\n            this.example.value[1] = new Date(this.new_adv.start_time + (this.new_adv.adversiting_time * 24 * 60 * 60 * 1000))\n            console.log(this.example.value)\n        },\n        handle_create_advertisement() {\n            this.start_time = this.example.value[0]\n            this.stop_time = \n            this.new_adv.note = this.option.position\n            this.new_adv.page = this.selected_page\n            // this.$validator.validateAll()\n            // if(!this.errors.any()) {\n            //     return new Promise((resolve, reject) => {\n            //         HTTP.post('/advertisements/', this.new_adv).then(result => {\n            //             if(result.data.status == 201) {\n            //                 alert('Create New Advertisement Success')\n            //                 socket_bus.$emit('CLOSE_ADD_ADV', {data: result.data.data})\n            //             } else {\n            //                 alert('Create New Advertisement Fail')\n            //             }\n            //         }).catch(error => {\n            //             reject(error)\n            //             console.log('Error: ' + error);\n            //         })\n            //     })\n            // }\n            console.log(this.new_adv)\n        },\n        handle_get_brands() {\n            const customer = JSON.parse(localStorage.getItem('customer'))\n            return new Promise((resolve, reject) => {\n                HTTP.get('/brands/brand-customer/' + customer.id).then(result => {\n                    resolve(result.data)\n                    this.brands = result.data.status == 200 ? result.data.data : []\n                }).catch(error => {\n                    reject(error)\n                })\n            })\n        },\n    },\n    created() {\n        socket_bus.$on('ADV', (brand_choose) => {\n            this.is_add = true\n            this.new_adv.id_brand = brand_choose.id_brand\n        })\n        this.handle_get_brands()\n        this.$store.dispatch('get_advertisement_type').then(result => {\n            this.adver_type = result.status == 200 ? result.data : []\n        })  \n\n    }\n}\n</script>"]}]}