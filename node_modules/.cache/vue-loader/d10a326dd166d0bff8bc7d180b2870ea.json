{"remainingRequest":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/src/components/Pages/User/ui_user/FormAddBrand.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/src/components/Pages/User/ui_user/FormAddBrand.vue","mtime":1578241882000},{"path":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { socket_bus } from '../../../../main'\nimport {HTTP_ADMIN} from '../../../../http-common'\n\nexport default {\n    data() {\n        return {\n            is_show: false,\n            customers:[],\n            search_text: '',\n            customer: '',\n            categories: [],\n            category_selected: '',\n            list_feature:[],\n            new_brand: {\n                id_category: '',\n                id_customer: '',\n                name: '',\n                introduce: '',\n                phone_number: '',\n                email: '',\n                website: '',\n                feature: [],\n                events: [],\n                terms: [],\n                location: [],\n                head_office: 'No Info',\n                price: 1000,\n                offset_price:1000\n            },\n            images: '',\n            thumbnail: '',\n            main_banner: Array,\n            image_intro: Array\n\n        }\n    },\n    methods : {\n        handle_translate(name) {\n            var result = ''\n            switch(name) {\n                case 'Drink':\n                    result = this.$t('drink')\n                    break;\n                case 'Dessert':\n                    result = this.$t('dessert')\n                    break;\n                case 'Vietnamese Foods':\n                    result = this.$t('vn_food')\n                    break;\n                case 'Foriegn Foods':\n                    result = this.$t('foriegn_fd')\n                    break;\n                case 'BBQ':\n                    result = this.$t('bbq')\n                    break;\n                case 'Brunch':\n                    result = this.$t('brunch')\n                    break;\n                case 'Hot Pot':\n                    result = this.$t('hotpot')\n                    break;\n            }\n            return result;\n        },\n        handle_close() {\n            socket_bus.$emit('CANCEL_ADD_BRAND', {state: false})\n        },\n        handle_get_users() {\n            HTTP_ADMIN.get('/customers').then(result => {\n                this.customers = result.data.status == 200 ? result.data.data : []\n            }).catch(error => {\n                console.log(error)\n            })\n        },\n        handle_choose_customer(customer) {\n            this.customer = customer\n            this.is_show = false\n            this.search_text = customer.email\n        },\n        handleFileUpload(e) {\n            var files = e.target.files || e.dataTransfer.files;\n            if (!files.length)\n                return;\n            this.images = this.$refs.logo.files[0]\n            this.thumbnail = this.$refs.thumbnail.files[0]\n        },\n        handle_save() {\n            this.new_brand.feature = this.list_feature\n            this.new_brand.phone_number = this.customer.phone_number\n            this.new_brand.email = this.customer.email\n            this.new_brand.id_customer = this.customer.id\n            this.$validator.validateAll()\n            if(!this.errors.any()) {\n                HTTP_ADMIN.post('/brands', this.new_brand).then(result => {\n                    if(result.data.status == 201) {\n                        socket_bus.$emit('SHOW_ALERT', {is_show: true, message: this.$t('message_alert.create_brand_success'), is_redirect: true, brand: result.data.data})\n                        socket_bus.$emit('UPDATE_LIST_BRAND', {data: result.data.data})\n                        socket_bus.$emit('CANCEL_ADD_BRAND', {state: false})\n                    } else {\n                        socket_bus.$emit('SHOW_ALERT', {is_show: true, message: this.$t('message_alert.create_brand_fail'), is_redirect: true})\n                    }\n                })\n                .catch(error => {\n                    console.log(error);\n                })\n            }\n        }\n    },\n    computed: {\n         customer_filters() {\n           return this.customers.filter(item => {\n               return item.email.match(this.search_text.toLowerCase().trim())\n           })\n        },\n    },\n    created() {\n        this.handle_get_users()\n        this.$store.dispatch('get_categories').then(result => {\n            this.categories = result.data\n        })\n       \n        this.list_feature = [{content: \"Equipments included\", value: false}, {content: \"Need crowd\", value: false}, {content: \"Low risk\", value:false}, \n        {content: \"Free Franchise Fee\", value:false}, {content: \"Have decorated\", value:false}, {content: \"Free Signing\", value:false}, {content: \"Exemption premium\", value:false}\n        , {content:\"Education training\", value:false}, {content:\"Free Margin\", value:false}]\n    }\n}\n",{"version":3,"sources":["FormAddBrand.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"FormAddBrand.vue","sourceRoot":"src/components/Pages/User/ui_user","sourcesContent":["<template>\n    <div class=\"block-model\" style=\"background: rgba(0,0,0,.5)\">\n        <div class=\"block-alert padding-full\">\n            <div class=\"block-header bg-title-header padding-full header-fix width-full\">\n                <p class=\"title-form\">{{$t('add_brand')}}</p>\n            </div>\n            <form class=\"block-form\" style=\"padding: 8px 16px!important; width: 100%; max-height: 520px; overflow: auto;\" enctype=\"multipart/form-data\" @submit.prevent=\"handle_save\">\n                <div class=\"form-group row-group\">\n                    <div class=\"form-group col-group margin-fix-right\">\n                        <span class=\"label-span\">{{$t('customer')}}:</span>\n                        <input type=\"text\" class=\"border-bottom-ol margin-bottom\" v-model=\"search_text\" v-on:click=\"is_show = true\">\n\n                        <div class=\"form-group col-group\" v-if=\"is_show\">\n                            <ul class=\"list-city\">\n                                <li v-for=\"(item,index) in customer_filters\" v-on:click=\"handle_choose_customer(item)\" :key=\"index\" :value=\"item.id\"><p class=\"text-center\">{{item.full_name}}</p> </li>\n                            </ul>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-group\">\n                        <span class=\"label-span\">{{$t('name_customer')}}:</span>\n                        <input type=\"text\" class=\"border-bottom-ol margin-bottom\" v-model=\"customer.full_name\" readonly>\n                    </div>\n                </div>\n                <div class=\"form-group row-group\">\n                    <div class=\"form-group col-group margin-fix-right\">\n                        <span class=\"label-span margin-bottom\">{{$t('form_joining.category')}}</span>\n                        <select name=\"category\"  class=\"list-joining\" v-model=\"new_brand.id_category\">\n                            <option value=\"\" selected>-- {{$t('filter.choose_category')}} --</option>\n                            <option v-bind:value=\"item.name\" v-for=\"(item, index) in categories\" :key=\"index\">{{handle_translate(item.name)}}</option>\n                        </select>\n                    </div>\n                    <div class=\"form-group col-group\">\n                        <span class=\"label-span margin-bottom\">{{$t('user_page.brand_name')}}</span>\n                        <input type=\"text\" class=\"border-bottom-ol margin-bottom\" v-model=\"new_brand.name\" name=\"name\" v-validate=\"`required:true`\">\n                        <span class=\"error-text margin-fix-top\" v-show=\"errors.has('name')\">{{errors.first('name')}}</span>\n                    </div>\n                </div>\n                \n                <div class=\"form-group row-group\" style=\"justify-content: center; margin-top: 8px;\">\n                    <div class=\"btn btn-cancel margin-fix-right\" style=\"color: #ED6B28; border: 1px solid #ED6B28\" v-on:click=\"handle_close()\">{{$t('cancel')}}</div>\n                    <button class=\"btn btn-signup primary-color\" style=\"color: #FFF\" >{{$t('save')}}</button>\n                </div>\n            </form>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { socket_bus } from '../../../../main'\nimport {HTTP_ADMIN} from '../../../../http-common'\n\nexport default {\n    data() {\n        return {\n            is_show: false,\n            customers:[],\n            search_text: '',\n            customer: '',\n            categories: [],\n            category_selected: '',\n            list_feature:[],\n            new_brand: {\n                id_category: '',\n                id_customer: '',\n                name: '',\n                introduce: '',\n                phone_number: '',\n                email: '',\n                website: '',\n                feature: [],\n                events: [],\n                terms: [],\n                location: [],\n                head_office: 'No Info',\n                price: 1000,\n                offset_price:1000\n            },\n            images: '',\n            thumbnail: '',\n            main_banner: Array,\n            image_intro: Array\n\n        }\n    },\n    methods : {\n        handle_translate(name) {\n            var result = ''\n            switch(name) {\n                case 'Drink':\n                    result = this.$t('drink')\n                    break;\n                case 'Dessert':\n                    result = this.$t('dessert')\n                    break;\n                case 'Vietnamese Foods':\n                    result = this.$t('vn_food')\n                    break;\n                case 'Foriegn Foods':\n                    result = this.$t('foriegn_fd')\n                    break;\n                case 'BBQ':\n                    result = this.$t('bbq')\n                    break;\n                case 'Brunch':\n                    result = this.$t('brunch')\n                    break;\n                case 'Hot Pot':\n                    result = this.$t('hotpot')\n                    break;\n            }\n            return result;\n        },\n        handle_close() {\n            socket_bus.$emit('CANCEL_ADD_BRAND', {state: false})\n        },\n        handle_get_users() {\n            HTTP_ADMIN.get('/customers').then(result => {\n                this.customers = result.data.status == 200 ? result.data.data : []\n            }).catch(error => {\n                console.log(error)\n            })\n        },\n        handle_choose_customer(customer) {\n            this.customer = customer\n            this.is_show = false\n            this.search_text = customer.email\n        },\n        handleFileUpload(e) {\n            var files = e.target.files || e.dataTransfer.files;\n            if (!files.length)\n                return;\n            this.images = this.$refs.logo.files[0]\n            this.thumbnail = this.$refs.thumbnail.files[0]\n        },\n        handle_save() {\n            this.new_brand.feature = this.list_feature\n            this.new_brand.phone_number = this.customer.phone_number\n            this.new_brand.email = this.customer.email\n            this.new_brand.id_customer = this.customer.id\n            this.$validator.validateAll()\n            if(!this.errors.any()) {\n                HTTP_ADMIN.post('/brands', this.new_brand).then(result => {\n                    if(result.data.status == 201) {\n                        socket_bus.$emit('SHOW_ALERT', {is_show: true, message: this.$t('message_alert.create_brand_success'), is_redirect: true, brand: result.data.data})\n                        socket_bus.$emit('UPDATE_LIST_BRAND', {data: result.data.data})\n                        socket_bus.$emit('CANCEL_ADD_BRAND', {state: false})\n                    } else {\n                        socket_bus.$emit('SHOW_ALERT', {is_show: true, message: this.$t('message_alert.create_brand_fail'), is_redirect: true})\n                    }\n                })\n                .catch(error => {\n                    console.log(error);\n                })\n            }\n        }\n    },\n    computed: {\n         customer_filters() {\n           return this.customers.filter(item => {\n               return item.email.match(this.search_text.toLowerCase().trim())\n           })\n        },\n    },\n    created() {\n        this.handle_get_users()\n        this.$store.dispatch('get_categories').then(result => {\n            this.categories = result.data\n        })\n       \n        this.list_feature = [{content: \"Equipments included\", value: false}, {content: \"Need crowd\", value: false}, {content: \"Low risk\", value:false}, \n        {content: \"Free Franchise Fee\", value:false}, {content: \"Have decorated\", value:false}, {content: \"Free Signing\", value:false}, {content: \"Exemption premium\", value:false}\n        , {content:\"Education training\", value:false}, {content:\"Free Margin\", value:false}]\n    }\n}\n</script>"]}]}