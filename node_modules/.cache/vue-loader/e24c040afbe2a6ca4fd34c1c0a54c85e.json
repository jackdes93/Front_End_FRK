{"remainingRequest":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/src/components/Pages/ForgotPassword.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/src/components/Pages/ForgotPassword.vue","mtime":1581193550505},{"path":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jackdesy93/Documents/Project Free Landcer/Franchise King/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport block_nav from '../Units/BlockNav';\nimport block_footer from '../Units/Block_Footer';\nimport block_alert from '../Units/Block_Notification';\nimport { socket_bus } from '../../main'\nimport VueRecaptcha from 'vue-recaptcha'\nimport { HTTP } from '../../http-common';\nimport { router } from '../../routers';\n\nexport default {\n    components: {\n        block_nav, block_footer,block_alert, VueRecaptcha\n    },\n    data() {\n        return {\n            email: '',\n            token_recaptcha: null,\n        }\n    },\n    methods: {\n        handle_verify: function(response) {\n           this.token_recaptcha = response\n        },\n        handle_expired: function () {\n            this.$refs.recaptcha.reset()\n        },\n        handle_load() {\n            this.$recaptchaLoaded().then(() => {\n\n            })\n        },\n        handle_send_link_reset() {\n            if(this.token_recaptcha != null) {\n                return new Promise((resolve, reject) => {\n                    HTTP.post(`/reset-password`, {email: this.email}).then(result => {\n                        resolve(result)\n                        if(result.data.status == 201) {\n                            socket_bus.$emit('SHOW_MESSAGE', {message: this.$t('message_alert.send_link_reset_success')})\n                            setTimeout(() => {\n                                router.push('/')\n                            }, 2000)\n                        } else {\n                            socket_bus.$emit('SHOW_MESSAGE', {message: this.$t('message_alert.send_link_reset_fail')})\n                        }   \n                    }).catch(error => {\n                        reject(error)\n                        console.log(error);\n                    })\n                })\n            } else {\n                socket_bus.$emit('SHOW_MESSAGE', {message: this.$t('message_alert.check_capcha')})\n            }\n        }\n    },\n    created() {\n\n    }\n}\n",{"version":3,"sources":["ForgotPassword.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"ForgotPassword.vue","sourceRoot":"src/components/Pages","sourcesContent":["<template>\n   <div>\n        <block_nav></block_nav>\n        <div class=\"flex-col-center\" style=\"display: flex; margin: 60px 0;\">\n            <div class=\"block-form flex-col-center\">\n                <ValidationObserver v-slot=\"{ invalid }\">\n                    <form class=\"form-login\" @submit.prevent=\"handle_send_link_reset\">\n                        <div class=\"form-header\">\n                            <p class=\"title-form\">{{$t('manager.forgot_pwd')}}</p>\n                        </div>\n                        <div class=\"form-content\" style=\"height: auto; flex: 1; padding: 0;  margin-top: 20px;\">\n                            <div class=\"form-group margin-bottom col-group\">\n                                <div class=\"form-group\">\n                                    <ValidationProvider name=\"email\" rules=\"required|email\" v-slot=\"{ errors }\" style=\"width: 100%;\">\n                                        <input type=\"text\" name=\"email\" placeholder=\"Email\" v-model=\"email\" >\n                                        <span class=\"error-text margin-fix-top\" >{{ errors[0] }}</span>\n                                    </ValidationProvider>\n                                </div>\n                            </div>\n                            <vue-recaptcha id=\"capcah\" sitekey=\"6LeeM74UAAAAAJ71ru17H2h-hReSNO_07eNNm7Is\" :loadRecaptchaScript=\"true\" @verify=\"handle_verify\" @expired=\"handle_expired\" ref=\"recaptcha\" ></vue-recaptcha >\n                            <div class=\"form-group margin-top\" >\n                                <button type=\"submit\" class=\"btn btn-login\" :class=\"{'bg-title-header': !invalid, 'disable-button' : invalid}\" :disabled=\"invalid\"   style=\"width: 100%; border: none;\">{{$t('manager.send_reset')}}</button>\n                            </div>\n                        </div>\n                    </form>\n                </ValidationObserver>\n            </div>\n        </div>\n        <block_footer></block_footer>\n        <block_alert></block_alert>\n    </div>\n   \n</template>\n\n<script>\nimport block_nav from '../Units/BlockNav';\nimport block_footer from '../Units/Block_Footer';\nimport block_alert from '../Units/Block_Notification';\nimport { socket_bus } from '../../main'\nimport VueRecaptcha from 'vue-recaptcha'\nimport { HTTP } from '../../http-common';\nimport { router } from '../../routers';\n\nexport default {\n    components: {\n        block_nav, block_footer,block_alert, VueRecaptcha\n    },\n    data() {\n        return {\n            email: '',\n            token_recaptcha: null,\n        }\n    },\n    methods: {\n        handle_verify: function(response) {\n           this.token_recaptcha = response\n        },\n        handle_expired: function () {\n            this.$refs.recaptcha.reset()\n        },\n        handle_load() {\n            this.$recaptchaLoaded().then(() => {\n\n            })\n        },\n        handle_send_link_reset() {\n            if(this.token_recaptcha != null) {\n                return new Promise((resolve, reject) => {\n                    HTTP.post(`/reset-password`, {email: this.email}).then(result => {\n                        resolve(result)\n                        if(result.data.status == 201) {\n                            socket_bus.$emit('SHOW_MESSAGE', {message: this.$t('message_alert.send_link_reset_success')})\n                            setTimeout(() => {\n                                router.push('/')\n                            }, 2000)\n                        } else {\n                            socket_bus.$emit('SHOW_MESSAGE', {message: this.$t('message_alert.send_link_reset_fail')})\n                        }   \n                    }).catch(error => {\n                        reject(error)\n                        console.log(error);\n                    })\n                })\n            } else {\n                socket_bus.$emit('SHOW_MESSAGE', {message: this.$t('message_alert.check_capcha')})\n            }\n        }\n    },\n    created() {\n\n    }\n}\n</script>"]}]}